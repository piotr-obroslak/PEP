/*
 * PEPView.java
 */

package pep;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.TaskMonitor;
import org.jdesktop.application.FrameView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import pepCalculator.Norm;

/**
 * The application's main frame.
 */
public class PEPView extends FrameView {

    public PEPView(SingleFrameApplication app) {
        super(app);

        initCalcs();
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                //statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        //statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        //statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    //statusAnimationLabel.setIcon(idleIcon);
                    //progressBar.setVisible(false);
                    //progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    //statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(false);
                    //progressBar.setValue(value);
                }
            }
        });

        getFrame().setResizable(false);
        //getFrame().setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        loadDefaultParamFile();
        reflectCalcs();
    }

    @Action
    public void saveDefaultParamFile() {
        int idx = calculatorsTPane.getSelectedIndex();
        
        //if (idx == 0)
        {
            cewkaCalc.SaveDefaultCfg();
        }
        //else if (idx == 1)
        {
            LPNCalc.SaveDefaultCfg();
        }
        //else if (idx == 2)
        {
            rezonCalc.SaveDefaultCfg();
        }
    }
    
    public void loadDefaultParamFile() {
        int idx = calculatorsTPane.getSelectedIndex();
        
        //if (idx == 0)
        {
            cewkaCalc.LoadDefaultCfg();
        }
        //else if (idx == 1)
        {
            LPNCalc.LoadDefaultCfg();
        }
        //else if (idx == 2)
        {
            rezonCalc.LoadDefaultCfg();
        }
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = PEPApp.getApplication().getMainFrame();
            aboutBox = new PEPAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        PEPApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        calculatorsTPane = new javax.swing.JTabbedPane();
        cewkapPanel = new javax.swing.JPanel();
        jLabelInductorTitle = new javax.swing.JLabel();
        jLabelInductorKnowledgeBase = new javax.swing.JLabel();
        jLabelInductorGuide = new javax.swing.JLabel();
        jPanelCewkaWe = new javax.swing.JPanel();
        jSpinnerCewkaX = new javax.swing.JSpinner();
        jSpinnerCewkaD = new javax.swing.JSpinner();
        jSpinnerCewkaN = new javax.swing.JSpinner();
        jLabelCewkaX = new javax.swing.JLabel();
        jLabelCewkaD = new javax.swing.JLabel();
        jLabelCewkaN = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelCewkaMaxSr = new javax.swing.JLabel();
        jLabelCewkaDDivX = new javax.swing.JLabel();
        jLabelCewkaRs = new javax.swing.JLabel();
        jLabelCewkaXJdn = new javax.swing.JLabel();
        jLabelCewkaDJdn = new javax.swing.JLabel();
        jLabelCewkaNJdn = new javax.swing.JLabel();
        jTextCewkaRs = new javax.swing.JTextField();
        jLabelCewkaRsJdn = new javax.swing.JLabel();
        jPanelCewkaWy = new javax.swing.JPanel();
        jLabelCewkaL = new javax.swing.JLabel();
        jLabelCewkaLMi = new javax.swing.JLabel();
        jLabelCewkaQl = new javax.swing.JLabel();
        jPanelCewkaParam = new javax.swing.JPanel();
        jLabelCewkaUw = new javax.swing.JLabel();
        jLabelCewkaFx = new javax.swing.JLabel();
        jLabelCewkaWzor = new javax.swing.JLabel();
        jSpinnerCewkaFx = new javax.swing.JSpinner();
        jLabelCewkaFxJdn = new javax.swing.JLabel();
        jTextCewkaMi = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelInductorHelp = new javax.swing.JLabel();
        lpnPanel = new javax.swing.JPanel();
        jLabelLPNTitle = new javax.swing.JLabel();
        jLabelLPNKnowledgeBase = new javax.swing.JLabel();
        jLabelLPNGuide = new javax.swing.JLabel();
        jPanelLPNWe = new javax.swing.JPanel();
        jLabelLPNW = new javax.swing.JLabel();
        jLabelLPNH = new javax.swing.JLabel();
        jSpinnerLPNW = new javax.swing.JSpinner();
        jSpinnerLPNH = new javax.swing.JSpinner();
        jSeparator3 = new javax.swing.JSeparator();
        jLabelLPNWJdn = new javax.swing.JLabel();
        jLabelLPNHJdn = new javax.swing.JLabel();
        jLabelLPNWDivH = new javax.swing.JLabel();
        jLabelLPNW_ef = new javax.swing.JLabel();
        jLabelLPNEps_ef = new javax.swing.JLabel();
        jLabelLPNW_mls = new javax.swing.JLabel();
        jLabelLPNW_mlsJdn = new javax.swing.JLabel();
        jPanelLPNWy = new javax.swing.JPanel();
        jLabelLPNZ0 = new javax.swing.JLabel();
        jPanelLPNParam = new javax.swing.JPanel();
        jLabelLPNT = new javax.swing.JLabel();
        jLabelLPNEps = new javax.swing.JLabel();
        jTextLPNT = new javax.swing.JTextField();
        jSpinnerLPNEps = new javax.swing.JSpinner();
        jLabelLPNTJdn = new javax.swing.JLabel();
        jLabelLPNHelp = new javax.swing.JLabel();
        rezPanel = new javax.swing.JPanel();
        jLabelRezonTitle = new javax.swing.JLabel();
        jLabelRezonKnowledgeBase = new javax.swing.JLabel();
        jLabelRezonGuide = new javax.swing.JLabel();
        jPanelRezonWe = new javax.swing.JPanel();
        jLabelRezonLx = new javax.swing.JLabel();
        jSpinnerRezonLx = new javax.swing.JSpinner();
        jLabelRezonLxJdn = new javax.swing.JLabel();
        jLabelRezonCx = new javax.swing.JLabel();
        jSpinnerRezonCx = new javax.swing.JSpinner();
        jLabelRezonCxJdn = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabelRezonRs = new javax.swing.JLabel();
        jLabelRezonRr = new javax.swing.JLabel();
        jTextRezonRs = new javax.swing.JTextField();
        jTextRezonRr = new javax.swing.JTextField();
        jLabelRezonRsUnit = new javax.swing.JLabel();
        jLabelRezonRrUnit = new javax.swing.JLabel();
        jPanelRezonWy = new javax.swing.JPanel();
        jLabelRezonQr = new javax.swing.JLabel();
        jLabelRezonQs = new javax.swing.JLabel();
        jLabelRezonFR_ = new javax.swing.JLabel();
        jTextRezonFR = new javax.swing.JTextField();
        jLabelRezonFRUnit = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabelRezonRO = new javax.swing.JLabel();
        jPanelRezonParam = new javax.swing.JPanel();
        jLabelRezonStepCx = new javax.swing.JLabel();
        jLabelRezonStepLx = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabelRezonVarLx = new javax.swing.JLabel();
        jLabelRezonVarFR = new javax.swing.JLabel();
        jLabelRezonVarCx = new javax.swing.JLabel();
        jLabelRezonHelp = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItemOtworz = new javax.swing.JMenuItem();
        jMenuItemZapisz = new javax.swing.JMenuItem();
        jMenuItemZapiszJako = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        calculatorsTPane.setFont(calculatorsTPane.getFont().deriveFont(calculatorsTPane.getFont().getSize()+1f));
        calculatorsTPane.setName("calculatorsTPane"); // NOI18N

        cewkapPanel.setName("cewkapPanel"); // NOI18N
        cewkapPanel.setLayout(null);

        jLabelInductorTitle.setFont(jLabelInductorTitle.getFont().deriveFont(jLabelInductorTitle.getFont().getStyle() | java.awt.Font.BOLD, jLabelInductorTitle.getFont().getSize()+3));
        jLabelInductorTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(pep.PEPApp.class).getContext().getResourceMap(PEPView.class);
        jLabelInductorTitle.setText(resourceMap.getString("jLabelInductorTitle.text")); // NOI18N
        jLabelInductorTitle.setName("jLabelInductorTitle"); // NOI18N
        cewkapPanel.add(jLabelInductorTitle);
        jLabelInductorTitle.setBounds(12, 12, 746, 18);

        jLabelInductorKnowledgeBase.setFont(jLabelInductorKnowledgeBase.getFont().deriveFont(jLabelInductorKnowledgeBase.getFont().getStyle() & ~java.awt.Font.BOLD, jLabelInductorKnowledgeBase.getFont().getSize()+1));
        jLabelInductorKnowledgeBase.setForeground(resourceMap.getColor("jLabelInductorKnowledgeBase.foreground")); // NOI18N
        jLabelInductorKnowledgeBase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelInductorKnowledgeBase.setText(resourceMap.getString("jLabelInductorKnowledgeBase.text")); // NOI18N
        jLabelInductorKnowledgeBase.setName("jLabelInductorKnowledgeBase"); // NOI18N
        cewkapPanel.add(jLabelInductorKnowledgeBase);
        jLabelInductorKnowledgeBase.setBounds(12, 36, 746, 17);

        jLabelInductorGuide.setFont(jLabelInductorGuide.getFont().deriveFont(jLabelInductorGuide.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelInductorGuide.setForeground(resourceMap.getColor("jLabelInductorGuide.foreground")); // NOI18N
        jLabelInductorGuide.setText(resourceMap.getString("jLabelInductorGuide.text")); // NOI18N
        jLabelInductorGuide.setName("jLabelInductorGuide"); // NOI18N
        cewkapPanel.add(jLabelInductorGuide);
        jLabelInductorGuide.setBounds(12, 60, 746, 60);

        jPanelCewkaWe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaWe.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaWe.border.titleFont"), resourceMap.getColor("jPanelCewkaWe.border.titleColor"))); // NOI18N
        jPanelCewkaWe.setForeground(resourceMap.getColor("jPanelCewkaWe.foreground")); // NOI18N
        jPanelCewkaWe.setFont(jPanelCewkaWe.getFont().deriveFont(jPanelCewkaWe.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaWe.getFont().getSize()+1));
        jPanelCewkaWe.setName("jPanelCewkaWe"); // NOI18N

        jSpinnerCewkaX.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaX.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaX));
        jSpinnerCewkaX.setName("jSpinnerCewkaX"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaX.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaXEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F1"), "F1 pressed");
        jSpinnerCewkaX.getActionMap().put("F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decX(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F1"), "shift F1 pressed");
        jSpinnerCewkaX.getActionMap().put("shift F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decX(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F2"), "F2 pressed");
        jSpinnerCewkaX.getActionMap().put("F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incX(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F2"), "shift F2 pressed");
        jSpinnerCewkaX.getActionMap().put("shift F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incX(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaXStateChanged(evt);
            }
        });

        jSpinnerCewkaD.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaD.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaD));
        jSpinnerCewkaD.setName("jSpinnerCewkaD"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaD.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaDEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F3"), "F3 pressed");
        jSpinnerCewkaD.getActionMap().put("F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decD(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F3"), "shift F3 pressed");
        jSpinnerCewkaD.getActionMap().put("shift F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decD(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F4"), "F4 pressed");
        jSpinnerCewkaD.getActionMap().put("F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incD(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F4"), "shift F4 pressed");
        jSpinnerCewkaD.getActionMap().put("shift F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incD(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaDStateChanged(evt);
            }
        });

        jSpinnerCewkaN.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaN.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaN));
        jSpinnerCewkaN.setName("jSpinnerCewkaN"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaN.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaNEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F5"), "F5 pressed");
        jSpinnerCewkaN.getActionMap().put("F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decN(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F5"), "shift F5 pressed");
        jSpinnerCewkaN.getActionMap().put("shift F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decN(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F6"), "F6 pressed");
        jSpinnerCewkaN.getActionMap().put("F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incN(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F6"), "shift F6 pressed");
        jSpinnerCewkaN.getActionMap().put("shift F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incN(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaNStateChanged(evt);
            }
        });

        jLabelCewkaX.setFont(jLabelCewkaX.getFont().deriveFont(jLabelCewkaX.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaX.setText(resourceMap.getString("jLabelCewkaX.text")); // NOI18N
        jLabelCewkaX.setName("jLabelCewkaX"); // NOI18N

        jLabelCewkaD.setFont(jLabelCewkaD.getFont().deriveFont(jLabelCewkaD.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaD.setText(resourceMap.getString("jLabelCewkaD.text")); // NOI18N
        jLabelCewkaD.setName("jLabelCewkaD"); // NOI18N

        jLabelCewkaN.setFont(jLabelCewkaN.getFont().deriveFont(jLabelCewkaN.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaN.setText(resourceMap.getString("jLabelCewkaN.text")); // NOI18N
        jLabelCewkaN.setName("jLabelCewkaN"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabelCewkaMaxSr.setFont(jLabelCewkaMaxSr.getFont().deriveFont(jLabelCewkaMaxSr.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaMaxSr.setText(resourceMap.getString("jLabelCewkaMaxSr.text")); // NOI18N
        jLabelCewkaMaxSr.setName("jLabelCewkaMaxSr"); // NOI18N

        jLabelCewkaDDivX.setFont(jLabelCewkaDDivX.getFont().deriveFont(jLabelCewkaDDivX.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaDDivX.setText(resourceMap.getString("jLabelCewkaDDivX.text")); // NOI18N
        jLabelCewkaDDivX.setName("jLabelCewkaDDivX"); // NOI18N

        jLabelCewkaRs.setFont(jLabelCewkaRs.getFont().deriveFont(jLabelCewkaRs.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaRs.setText(resourceMap.getString("jLabelCewkaRs.text")); // NOI18N
        jLabelCewkaRs.setName("jLabelCewkaRs"); // NOI18N

        jLabelCewkaXJdn.setFont(jLabelCewkaXJdn.getFont().deriveFont(jLabelCewkaXJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaXJdn.setText(resourceMap.getString("jLabelCewkaXJdn.text")); // NOI18N
        jLabelCewkaXJdn.setName("jLabelCewkaXJdn"); // NOI18N

        jLabelCewkaDJdn.setFont(jLabelCewkaDJdn.getFont().deriveFont(jLabelCewkaDJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaDJdn.setText(resourceMap.getString("jLabelCewkaDJdn.text")); // NOI18N
        jLabelCewkaDJdn.setName("jLabelCewkaDJdn"); // NOI18N

        jLabelCewkaNJdn.setFont(jLabelCewkaNJdn.getFont().deriveFont(jLabelCewkaNJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaNJdn.setText(resourceMap.getString("jLabelCewkaNJdn.text")); // NOI18N
        jLabelCewkaNJdn.setName("jLabelCewkaNJdn"); // NOI18N

        jTextCewkaRs.setFont(jTextCewkaRs.getFont().deriveFont(jTextCewkaRs.getFont().getStyle() | java.awt.Font.BOLD));
        jTextCewkaRs.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextCewkaRs.setText(resourceMap.getString("jTextCewkaRs.text")); // NOI18N
        jTextCewkaRs.setName("jTextCewkaRs"); // NOI18N

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F7"), "F7 pressed");
        jTextCewkaRs.getActionMap().put("F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decRs(false);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F7"), "shift F7 pressed");
        jTextCewkaRs.getActionMap().put("shift F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decRs(true);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F8"), "F8 pressed");
        jTextCewkaRs.getActionMap().put("F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incRs(false);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F8"), "shift F8 pressed");
        jTextCewkaRs.getActionMap().put("shift F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incRs(true);
                ReflectCewkaCalc();
            }
        });
        jTextCewkaRs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCewkaRsActionPerformed(evt);
            }
        });

        jLabelCewkaRsJdn.setFont(jLabelCewkaRsJdn.getFont().deriveFont(jLabelCewkaRsJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaRsJdn.setText(resourceMap.getString("jLabelCewkaRsJdn.text")); // NOI18N
        jLabelCewkaRsJdn.setName("jLabelCewkaRsJdn"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaWeLayout = new javax.swing.GroupLayout(jPanelCewkaWe);
        jPanelCewkaWe.setLayout(jPanelCewkaWeLayout);
        jPanelCewkaWeLayout.setHorizontalGroup(
            jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jSpinnerCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaXJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jSpinnerCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaDJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jSpinnerCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaNJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaMaxSr, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaDDivX, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabelCewkaRs)
                        .addGap(18, 18, 18)
                        .addComponent(jTextCewkaRs, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaRsJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanelCewkaWeLayout.setVerticalGroup(
            jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSpinnerCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaXJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSpinnerCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaDJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSpinnerCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaNJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabelCewkaMaxSr)
                .addGap(6, 6, 6)
                .addComponent(jLabelCewkaDDivX)
                .addGap(12, 12, 12)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabelCewkaRs))
                    .addComponent(jTextCewkaRs, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabelCewkaRsJdn))))
        );

        cewkapPanel.add(jPanelCewkaWe);
        jPanelCewkaWe.setBounds(12, 136, 246, 250);
        jPanelCewkaWe.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanelCewkaWe.AccessibleContext.accessibleName")); // NOI18N

        jPanelCewkaWy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaWy.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaWy.border.titleFont"), resourceMap.getColor("jPanelCewkaWy.border.titleColor"))); // NOI18N
        jPanelCewkaWy.setFont(jPanelCewkaWy.getFont().deriveFont(jPanelCewkaWy.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaWy.getFont().getSize()+1));
        jPanelCewkaWy.setName("jPanelCewkaWy"); // NOI18N

        jLabelCewkaL.setFont(jLabelCewkaL.getFont().deriveFont(jLabelCewkaL.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaL.getFont().getSize()+1));
        jLabelCewkaL.setForeground(resourceMap.getColor("jLabelCewkaL.foreground")); // NOI18N
        jLabelCewkaL.setText(resourceMap.getString("jLabelCewkaL.text")); // NOI18N
        jLabelCewkaL.setName("jLabelCewkaL"); // NOI18N

        jLabelCewkaLMi.setFont(jLabelCewkaLMi.getFont().deriveFont(jLabelCewkaLMi.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaLMi.getFont().getSize()+1));
        jLabelCewkaLMi.setForeground(resourceMap.getColor("jLabelCewkaLMi.foreground")); // NOI18N
        jLabelCewkaLMi.setText(resourceMap.getString("jLabelCewkaLMi.text")); // NOI18N
        jLabelCewkaLMi.setName("jLabelCewkaLMi"); // NOI18N

        jLabelCewkaQl.setFont(jLabelCewkaQl.getFont().deriveFont(jLabelCewkaQl.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaQl.getFont().getSize()+1));
        jLabelCewkaQl.setForeground(resourceMap.getColor("jLabelCewkaQl.foreground")); // NOI18N
        jLabelCewkaQl.setText(resourceMap.getString("jLabelCewkaQl.text")); // NOI18N
        jLabelCewkaQl.setName("jLabelCewkaQl"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaWyLayout = new javax.swing.GroupLayout(jPanelCewkaWy);
        jPanelCewkaWy.setLayout(jPanelCewkaWyLayout);
        jPanelCewkaWyLayout.setHorizontalGroup(
            jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                .addGroup(jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaL, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaLMi, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelCewkaQl, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanelCewkaWyLayout.setVerticalGroup(
            jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaL)
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaLMi)
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaQl))
        );

        cewkapPanel.add(jPanelCewkaWy);
        jPanelCewkaWy.setBounds(264, 136, 246, 250);

        jPanelCewkaParam.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaParam.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaParam.border.titleFont"))); // NOI18N
        jPanelCewkaParam.setFont(jPanelCewkaParam.getFont().deriveFont(jPanelCewkaParam.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaParam.getFont().getSize()+1));
        jPanelCewkaParam.setName("jPanelCewkaParam"); // NOI18N

        jLabelCewkaUw.setFont(jLabelCewkaUw.getFont().deriveFont(jLabelCewkaUw.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaUw.setText(resourceMap.getString("jLabelCewkaUw.text")); // NOI18N
        jLabelCewkaUw.setName("jLabelCewkaUw"); // NOI18N

        jLabelCewkaFx.setFont(jLabelCewkaFx.getFont().deriveFont(jLabelCewkaFx.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaFx.setText(resourceMap.getString("jLabelCewkaFx.text")); // NOI18N
        jLabelCewkaFx.setName("jLabelCewkaFx"); // NOI18N

        jLabelCewkaWzor.setFont(jLabelCewkaWzor.getFont().deriveFont(jLabelCewkaWzor.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaWzor.setText(resourceMap.getString("jLabelCewkaWzor.text")); // NOI18N
        jLabelCewkaWzor.setName("jLabelCewkaWzor"); // NOI18N

        jSpinnerCewkaFx.setModel(new pep.StepCountingSpinnerNumberModel());
        jSpinnerCewkaFx.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaFx));
        jSpinnerCewkaFx.setName("jSpinnerCewkaFx"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaFx.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaFxEditActionPerformed(evt);
            }
        });
        jSpinnerCewkaFx.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaFxStateChanged(evt);
            }
        });

        jLabelCewkaFxJdn.setFont(jLabelCewkaFxJdn.getFont().deriveFont(jLabelCewkaFxJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaFxJdn.setText(resourceMap.getString("jLabelCewkaFxJdn.text")); // NOI18N
        jLabelCewkaFxJdn.setName("jLabelCewkaFxJdn"); // NOI18N

        jTextCewkaMi.setFont(jTextCewkaMi.getFont().deriveFont(jTextCewkaMi.getFont().getStyle() | java.awt.Font.BOLD));
        jTextCewkaMi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextCewkaMi.setText(resourceMap.getString("jTextCewkaMi.text")); // NOI18N
        jTextCewkaMi.setName("jTextCewkaMi"); // NOI18N
        jTextCewkaMi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCewkaMiActionPerformed(evt);
            }
        });

        jSeparator2.setName("jSeparator2"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaParamLayout = new javax.swing.GroupLayout(jPanelCewkaParam);
        jPanelCewkaParam.setLayout(jPanelCewkaParamLayout);
        jPanelCewkaParamLayout.setHorizontalGroup(
            jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaUw, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jTextCewkaMi, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaFx)
                .addGap(12, 12, 12)
                .addComponent(jSpinnerCewkaFx, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaFxJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaWzor, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelCewkaParamLayout.setVerticalGroup(
            jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaUw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextCewkaMi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaFx))
                    .addComponent(jSpinnerCewkaFx, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelCewkaFxJdn)))
                .addGap(15, 15, 15)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelCewkaWzor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cewkapPanel.add(jPanelCewkaParam);
        jPanelCewkaParam.setBounds(516, 136, 246, 250);

        jLabelInductorHelp.setFont(jLabelInductorHelp.getFont().deriveFont(jLabelInductorHelp.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelInductorHelp.setForeground(resourceMap.getColor("jLabelInductorHelp.foreground")); // NOI18N
        jLabelInductorHelp.setText(resourceMap.getString("jLabelInductorHelp.text")); // NOI18N
        jLabelInductorHelp.setName("jLabelInductorHelp"); // NOI18N
        cewkapPanel.add(jLabelInductorHelp);
        jLabelInductorHelp.setBounds(12, 398, 746, 30);

        calculatorsTPane.addTab(resourceMap.getString("cewkapPanel.TabConstraints.tabTitle"), cewkapPanel); // NOI18N

        lpnPanel.setName("lpnPanel"); // NOI18N
        lpnPanel.setLayout(null);

        jLabelLPNTitle.setFont(jLabelLPNTitle.getFont().deriveFont(jLabelLPNTitle.getFont().getStyle() | java.awt.Font.BOLD, jLabelLPNTitle.getFont().getSize()+3));
        jLabelLPNTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLPNTitle.setText(resourceMap.getString("jLabelLPNTitle.text")); // NOI18N
        jLabelLPNTitle.setName("jLabelLPNTitle"); // NOI18N
        lpnPanel.add(jLabelLPNTitle);
        jLabelLPNTitle.setBounds(12, 12, 746, 18);

        jLabelLPNKnowledgeBase.setFont(jLabelLPNKnowledgeBase.getFont().deriveFont(jLabelLPNKnowledgeBase.getFont().getStyle() & ~java.awt.Font.BOLD, jLabelLPNKnowledgeBase.getFont().getSize()+1));
        jLabelLPNKnowledgeBase.setForeground(resourceMap.getColor("jLabelLPNKnowledgeBase.foreground")); // NOI18N
        jLabelLPNKnowledgeBase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLPNKnowledgeBase.setText(resourceMap.getString("jLabelLPNKnowledgeBase.text")); // NOI18N
        jLabelLPNKnowledgeBase.setName("jLabelLPNKnowledgeBase"); // NOI18N
        lpnPanel.add(jLabelLPNKnowledgeBase);
        jLabelLPNKnowledgeBase.setBounds(12, 36, 746, 17);

        jLabelLPNGuide.setFont(jLabelLPNGuide.getFont().deriveFont(jLabelLPNGuide.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelLPNGuide.setForeground(resourceMap.getColor("jLabelLPNGuide.foreground")); // NOI18N
        jLabelLPNGuide.setText(resourceMap.getString("jLabelLPNGuide.text")); // NOI18N
        jLabelLPNGuide.setName("jLabelLPNGuide"); // NOI18N
        lpnPanel.add(jLabelLPNGuide);
        jLabelLPNGuide.setBounds(12, 60, 746, 30);

        jPanelLPNWe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelLPNWe.border.title"), 0, 0, resourceMap.getFont("jPanelLPNWe.border.titleFont"), resourceMap.getColor("jPanelLPNWe.border.titleColor"))); // NOI18N
        jPanelLPNWe.setFont(jPanelLPNWe.getFont().deriveFont(jPanelLPNWe.getFont().getStyle() | java.awt.Font.BOLD, jPanelLPNWe.getFont().getSize()+1));
        jPanelLPNWe.setName("jPanelLPNWe"); // NOI18N

        jLabelLPNW.setFont(jLabelLPNW.getFont().deriveFont(jLabelLPNW.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNW.setText(resourceMap.getString("jLabelLPNW.text")); // NOI18N
        jLabelLPNW.setName("jLabelLPNW"); // NOI18N

        jLabelLPNH.setFont(jLabelLPNH.getFont().deriveFont(jLabelLPNH.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNH.setText(resourceMap.getString("jLabelLPNH.text")); // NOI18N
        jLabelLPNH.setName("jLabelLPNH"); // NOI18N

        jSpinnerLPNW.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerLPNW.setEditor(new ModelIndependentSpinnerEditor(jSpinnerLPNW));
        jSpinnerLPNW.setName("jSpinnerLPNW"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerLPNW.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LPNWEditActionPerformed(evt);
            }
        });

        jSpinnerLPNW.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F1"), "F1 pressed");
        jSpinnerLPNW.getActionMap().put("F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decW(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNW.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F1"), "shift F1 pressed");
        jSpinnerLPNW.getActionMap().put("shift F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decW(true);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNW.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F2"), "F2 pressed");
        jSpinnerLPNW.getActionMap().put("F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incW(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNW.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F2"), "shift F2 pressed");
        jSpinnerLPNW.getActionMap().put("shift F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incW(true);
                ReflectLPNCalc();
            }
        });
        jSpinnerLPNW.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerLPNWStateChanged(evt);
            }
        });

        jSpinnerLPNH.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerLPNH.setEditor(new ModelIndependentSpinnerEditor(jSpinnerLPNH));
        jSpinnerLPNH.setName("jSpinnerLPNH"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerLPNH.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LPNHEditActionPerformed(evt);
            }
        });

        jSpinnerLPNH.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F5"), "F5 pressed");
        jSpinnerLPNH.getActionMap().put("F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decH(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNH.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F5"), "shift F5 pressed");
        jSpinnerLPNH.getActionMap().put("shift F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decH(true);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNH.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F6"), "F6 pressed");
        jSpinnerLPNH.getActionMap().put("F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incH(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNH.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F6"), "shift F6 pressed");
        jSpinnerLPNH.getActionMap().put("shift F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incH(true);
                ReflectLPNCalc();
            }
        });
        jSpinnerLPNH.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerLPNHStateChanged(evt);
            }
        });

        jSeparator3.setName("jSeparator3"); // NOI18N

        jLabelLPNWJdn.setFont(jLabelLPNWJdn.getFont().deriveFont(jLabelLPNWJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNWJdn.setText(resourceMap.getString("jLabelLPNWJdn.text")); // NOI18N
        jLabelLPNWJdn.setName("jLabelLPNWJdn"); // NOI18N

        jLabelLPNHJdn.setFont(jLabelLPNHJdn.getFont().deriveFont(jLabelLPNHJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNHJdn.setText(resourceMap.getString("jLabelLPNHJdn.text")); // NOI18N
        jLabelLPNHJdn.setName("jLabelLPNHJdn"); // NOI18N

        jLabelLPNWDivH.setFont(jLabelLPNWDivH.getFont().deriveFont(jLabelLPNWDivH.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNWDivH.setText(resourceMap.getString("jLabelLPNWDivH.text")); // NOI18N
        jLabelLPNWDivH.setName("jLabelLPNWDivH"); // NOI18N

        jLabelLPNW_ef.setFont(jLabelLPNW_ef.getFont().deriveFont(jLabelLPNW_ef.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNW_ef.setText(resourceMap.getString("jLabelLPNW_ef.text")); // NOI18N
        jLabelLPNW_ef.setName("jLabelLPNW_ef"); // NOI18N

        jLabelLPNEps_ef.setFont(jLabelLPNEps_ef.getFont().deriveFont(jLabelLPNEps_ef.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNEps_ef.setText(resourceMap.getString("jLabelLPNEps_ef.text")); // NOI18N
        jLabelLPNEps_ef.setName("jLabelLPNEps_ef"); // NOI18N

        jLabelLPNW_mls.setFont(jLabelLPNW_mls.getFont().deriveFont(jLabelLPNW_mls.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelLPNW_mls.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelLPNW_mls.setText(resourceMap.getString("jLabelLPNW_mls.text")); // NOI18N
        jLabelLPNW_mls.setName("jLabelLPNW_mls"); // NOI18N

        jLabelLPNW_mlsJdn.setFont(jLabelLPNW_mlsJdn.getFont().deriveFont(jLabelLPNW_mlsJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNW_mlsJdn.setText(resourceMap.getString("jLabelLPNW_mlsJdn.text")); // NOI18N
        jLabelLPNW_mlsJdn.setName("jLabelLPNW_mlsJdn"); // NOI18N

        javax.swing.GroupLayout jPanelLPNWeLayout = new javax.swing.GroupLayout(jPanelLPNWe);
        jPanelLPNWe.setLayout(jPanelLPNWeLayout);
        jPanelLPNWeLayout.setHorizontalGroup(
            jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addGroup(jPanelLPNWeLayout.createSequentialGroup()
                        .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLPNWeLayout.createSequentialGroup()
                                .addComponent(jLabelLPNW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerLPNW, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelLPNWeLayout.createSequentialGroup()
                                .addComponent(jLabelLPNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelLPNW_mls, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                    .addComponent(jSpinnerLPNH, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelLPNHJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(jLabelLPNW_mlsJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                            .addComponent(jLabelLPNWJdn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)))
                    .addComponent(jLabelLPNWDivH, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelLPNW_ef, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelLPNEps_ef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelLPNWeLayout.setVerticalGroup(
            jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerLPNW, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNWJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLPNW_mls, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNW_mlsJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanelLPNWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerLPNH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNHJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelLPNWDivH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLPNW_ef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLPNEps_ef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        jLabelLPNW_mlsJdn.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabelLPNW_mlsJdn.AccessibleContext.accessibleName")); // NOI18N

        lpnPanel.add(jPanelLPNWe);
        jPanelLPNWe.setBounds(12, 136, 246, 250);
        jPanelLPNWe.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel1.AccessibleContext.accessibleName")); // NOI18N

        jPanelLPNWy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelLPNWy.border.title"), 0, 0, resourceMap.getFont("jPanelLPNWy.border.titleFont"), resourceMap.getColor("jPanelLPNWy.border.titleColor"))); // NOI18N
        jPanelLPNWy.setName("jPanelLPNWy"); // NOI18N

        jLabelLPNZ0.setFont(jLabelLPNZ0.getFont().deriveFont(jLabelLPNZ0.getFont().getStyle() | java.awt.Font.BOLD, jLabelLPNZ0.getFont().getSize()+1));
        jLabelLPNZ0.setForeground(resourceMap.getColor("jLabelLPNZ0.foreground")); // NOI18N
        jLabelLPNZ0.setText(resourceMap.getString("jLabelLPNZ0.text")); // NOI18N
        jLabelLPNZ0.setName("jLabelLPNZ0"); // NOI18N

        javax.swing.GroupLayout jPanelLPNWyLayout = new javax.swing.GroupLayout(jPanelLPNWy);
        jPanelLPNWy.setLayout(jPanelLPNWyLayout);
        jPanelLPNWyLayout.setHorizontalGroup(
            jPanelLPNWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNWyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLPNZ0, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLPNWyLayout.setVerticalGroup(
            jPanelLPNWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNWyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLPNZ0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        jLabelLPNZ0.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabelLPNZ0.AccessibleContext.accessibleName")); // NOI18N

        lpnPanel.add(jPanelLPNWy);
        jPanelLPNWy.setBounds(264, 136, 246, 250);
        jPanelLPNWy.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel1.AccessibleContext.accessibleName")); // NOI18N

        jPanelLPNParam.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelLPNParam.border.title"), 0, 0, resourceMap.getFont("jPanelLPNParam.border.titleFont"))); // NOI18N
        jPanelLPNParam.setName("jPanelLPNParam"); // NOI18N

        jLabelLPNT.setFont(jLabelLPNT.getFont().deriveFont(jLabelLPNT.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNT.setText(resourceMap.getString("jLabelLPNT.text")); // NOI18N
        jLabelLPNT.setName("jLabelLPNT"); // NOI18N

        jLabelLPNEps.setFont(jLabelLPNEps.getFont().deriveFont(jLabelLPNEps.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNEps.setText(resourceMap.getString("jLabelLPNEps.text")); // NOI18N
        jLabelLPNEps.setName("jLabelLPNEps"); // NOI18N

        jTextLPNT.setFont(jTextLPNT.getFont().deriveFont(jTextLPNT.getFont().getStyle() | java.awt.Font.BOLD));
        jTextLPNT.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextLPNT.setText(resourceMap.getString("jTextLPNT.text")); // NOI18N
        jTextLPNT.setName("jTextLPNT"); // NOI18N
        jTextLPNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextLPNTActionPerformed(evt);
            }
        });

        jSpinnerLPNEps.setModel(new pep.StepCountingSpinnerNumberModel());
        jSpinnerLPNEps.setEditor(new ModelIndependentSpinnerEditor(jSpinnerLPNEps));
        jSpinnerLPNEps.setName("jSpinnerLPNEps"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerLPNEps.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LPNEpsEditActionPerformed(evt);
            }
        });

        jSpinnerLPNEps.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F7"), "F7 pressed");
        jSpinnerLPNEps.getActionMap().put("F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decEps(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNEps.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F7"), "shift F7 pressed");
        jSpinnerLPNEps.getActionMap().put("shift F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.decEps(true);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNEps.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F8"), "F8 pressed");
        jSpinnerLPNEps.getActionMap().put("F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incEps(false);
                ReflectLPNCalc();
            }
        });

        jSpinnerLPNEps.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F8"), "shift F8 pressed");
        jSpinnerLPNEps.getActionMap().put("shift F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                LPNCalc.incEps(true);
                ReflectLPNCalc();
            }
        });
        jSpinnerLPNEps.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerLPNEpsStateChanged(evt);
            }
        });

        jLabelLPNTJdn.setFont(jLabelLPNTJdn.getFont().deriveFont(jLabelLPNTJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelLPNTJdn.setText(resourceMap.getString("jLabelLPNTJdn.text")); // NOI18N
        jLabelLPNTJdn.setName("jLabelLPNTJdn"); // NOI18N

        javax.swing.GroupLayout jPanelLPNParamLayout = new javax.swing.GroupLayout(jPanelLPNParam);
        jPanelLPNParam.setLayout(jPanelLPNParamLayout);
        jPanelLPNParamLayout.setHorizontalGroup(
            jPanelLPNParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNParamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLPNParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLPNParamLayout.createSequentialGroup()
                        .addComponent(jLabelLPNT, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextLPNT, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelLPNTJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                    .addGroup(jPanelLPNParamLayout.createSequentialGroup()
                        .addComponent(jLabelLPNEps, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerLPNEps, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelLPNParamLayout.setVerticalGroup(
            jPanelLPNParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLPNParamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLPNParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLPNT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextLPNT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelLPNTJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLPNParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLPNEps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerLPNEps, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jTextLPNT.getAccessibleContext().setAccessibleName(resourceMap.getString("jTextLPNT.AccessibleContext.accessibleName")); // NOI18N
        jSpinnerLPNEps.getAccessibleContext().setAccessibleName(resourceMap.getString("jSpinnerLPNEps.AccessibleContext.accessibleName")); // NOI18N

        lpnPanel.add(jPanelLPNParam);
        jPanelLPNParam.setBounds(516, 136, 246, 250);
        jPanelLPNParam.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel1.AccessibleContext.accessibleName")); // NOI18N

        jLabelLPNHelp.setFont(jLabelLPNHelp.getFont().deriveFont(jLabelLPNHelp.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelLPNHelp.setForeground(resourceMap.getColor("jLabelLPNHelp.foreground")); // NOI18N
        jLabelLPNHelp.setText(resourceMap.getString("jLabelLPNHelp.text")); // NOI18N
        jLabelLPNHelp.setName("jLabelLPNHelp"); // NOI18N
        lpnPanel.add(jLabelLPNHelp);
        jLabelLPNHelp.setBounds(12, 398, 746, 30);

        calculatorsTPane.addTab(resourceMap.getString("lpnPanel.TabConstraints.tabTitle"), lpnPanel); // NOI18N

        rezPanel.setName("rezPanel"); // NOI18N
        rezPanel.setLayout(null);

        jLabelRezonTitle.setFont(jLabelRezonTitle.getFont().deriveFont(jLabelRezonTitle.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonTitle.getFont().getSize()+3));
        jLabelRezonTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRezonTitle.setText(resourceMap.getString("jLabelRezonTitle.text")); // NOI18N
        jLabelRezonTitle.setName("jLabelRezonTitle"); // NOI18N
        rezPanel.add(jLabelRezonTitle);
        jLabelRezonTitle.setBounds(12, 12, 746, 18);

        jLabelRezonKnowledgeBase.setFont(jLabelRezonKnowledgeBase.getFont().deriveFont(jLabelRezonKnowledgeBase.getFont().getStyle() & ~java.awt.Font.BOLD, jLabelRezonKnowledgeBase.getFont().getSize()+1));
        jLabelRezonKnowledgeBase.setForeground(resourceMap.getColor("jLabelRezonKnowledgeBase.foreground")); // NOI18N
        jLabelRezonKnowledgeBase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRezonKnowledgeBase.setText(resourceMap.getString("jLabelRezonKnowledgeBase.text")); // NOI18N
        jLabelRezonKnowledgeBase.setName("jLabelRezonKnowledgeBase"); // NOI18N
        rezPanel.add(jLabelRezonKnowledgeBase);
        jLabelRezonKnowledgeBase.setBounds(12, 36, 746, 17);

        jLabelRezonGuide.setFont(jLabelRezonGuide.getFont().deriveFont(jLabelRezonGuide.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelRezonGuide.setForeground(resourceMap.getColor("jLabelRezonGuide.foreground")); // NOI18N
        jLabelRezonGuide.setText(resourceMap.getString("jLabelRezonGuide.text")); // NOI18N
        jLabelRezonGuide.setName("jLabelRezonGuide"); // NOI18N
        rezPanel.add(jLabelRezonGuide);
        jLabelRezonGuide.setBounds(12, 60, 746, 45);

        jPanelRezonWe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelRezonWe.border.title"), 0, 0, resourceMap.getFont("jPanelRezonWe.border.titleFont"), resourceMap.getColor("jPanelRezonWe.border.titleColor"))); // NOI18N
        jPanelRezonWe.setName("jPanelRezonWe"); // NOI18N

        jLabelRezonLx.setFont(jLabelRezonLx.getFont().deriveFont(jLabelRezonLx.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonLx.setText(resourceMap.getString("jLabelRezonLx.text")); // NOI18N
        jLabelRezonLx.setName("jLabelRezonLx"); // NOI18N

        jSpinnerRezonLx.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerRezonLx.setEditor(new ModelIndependentSpinnerEditor(jSpinnerRezonLx));
        jSpinnerRezonLx.setName("jSpinnerRezonLx"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerRezonLx.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RezonLxEditActionPerformed(evt);
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F1"), "F1 pressed");
        jSpinnerRezonLx.getActionMap().put("F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decLx(false);
                ReflectRezonCalcAfterL();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F1"), "shift F1 pressed");
        jSpinnerRezonLx.getActionMap().put("shift F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decLx(true);
                ReflectRezonCalcAfterL();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F2"), "F2 pressed");
        jSpinnerRezonLx.getActionMap().put("F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incLx(false);
                ReflectRezonCalcAfterL();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F2"), "shift F2 pressed");
        jSpinnerRezonLx.getActionMap().put("shift F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incLx(true);
                ReflectRezonCalcAfterL();
            }
        });
        jSpinnerRezonLx.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerRezonLxStateChanged(evt);
            }
        });

        jLabelRezonLxJdn.setFont(jLabelRezonLxJdn.getFont().deriveFont(jLabelRezonLxJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonLxJdn.setText(resourceMap.getString("jLabelRezonLxJdn.text")); // NOI18N
        jLabelRezonLxJdn.setName("jLabelRezonLxJdn"); // NOI18N

        jLabelRezonCx.setFont(jLabelRezonCx.getFont().deriveFont(jLabelRezonCx.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonCx.setText(resourceMap.getString("jLabelRezonCx.text")); // NOI18N
        jLabelRezonCx.setName("jLabelRezonCx"); // NOI18N

        jSpinnerRezonCx.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerRezonCx.setEditor(new ModelIndependentSpinnerEditor(jSpinnerRezonLx));
        jSpinnerRezonCx.setName("jSpinnerRezonCx"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerRezonCx.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RezonCxEditActionPerformed(evt);
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F3"), "F3 pressed");
        jSpinnerRezonLx.getActionMap().put("F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decCx(false);
                ReflectRezonCalcAfterC();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F3"), "shift F3 pressed");
        jSpinnerRezonLx.getActionMap().put("shift F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decCx(true);
                ReflectRezonCalcAfterC();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F4"), "F4 pressed");
        jSpinnerRezonLx.getActionMap().put("F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incCx(false);
                ReflectRezonCalcAfterC();
            }
        });

        jSpinnerRezonLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F4"), "shift F4 pressed");
        jSpinnerRezonLx.getActionMap().put("shift F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incCx(true);
                ReflectRezonCalcAfterC();
            }
        });
        jSpinnerRezonCx.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerRezonCxStateChanged(evt);
            }
        });

        jLabelRezonCxJdn.setFont(jLabelRezonCxJdn.getFont().deriveFont(jLabelRezonCxJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonCxJdn.setText(resourceMap.getString("jLabelRezonCxJdn.text")); // NOI18N
        jLabelRezonCxJdn.setName("jLabelRezonCxJdn"); // NOI18N

        jSeparator4.setName("jSeparator4"); // NOI18N

        jLabelRezonRs.setFont(jLabelRezonRs.getFont().deriveFont(jLabelRezonRs.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonRs.setText(resourceMap.getString("jLabelRezonRs.text")); // NOI18N
        jLabelRezonRs.setName("jLabelRezonRs"); // NOI18N

        jLabelRezonRr.setFont(jLabelRezonRr.getFont().deriveFont(jLabelRezonRr.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonRr.setText(resourceMap.getString("jLabelRezonRr.text")); // NOI18N
        jLabelRezonRr.setName("jLabelRezonRr"); // NOI18N

        jTextRezonRs.setFont(jTextRezonRs.getFont().deriveFont(jTextRezonRs.getFont().getStyle() | java.awt.Font.BOLD));
        jTextRezonRs.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextRezonRs.setText(resourceMap.getString("jTextRezonRs.text")); // NOI18N
        jTextRezonRs.setName("jTextRezonRs"); // NOI18N

        jTextRezonRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F7"), "F7 pressed");
        jTextRezonRs.getActionMap().put("F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decRs(false);
                ReflectRezonCalcAfterRs();
            }
        });

        jTextRezonRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F7"), "shift F7 pressed");
        jTextRezonRs.getActionMap().put("shift F7 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decRs(true);
                ReflectRezonCalcAfterRs();
            }
        });

        jTextRezonRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F8"), "F8 pressed");
        jTextRezonRs.getActionMap().put("F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incRs(false);
                ReflectRezonCalcAfterRs();
            }
        });

        jTextRezonRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F8"), "shift F8 pressed");
        jTextRezonRs.getActionMap().put("shift F8 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incRs(true);
                ReflectRezonCalcAfterRs();
            }
        });
        jTextRezonRs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRezonRsActionPerformed(evt);
            }
        });

        jTextRezonRr.setFont(jTextRezonRr.getFont().deriveFont(jTextRezonRr.getFont().getStyle() | java.awt.Font.BOLD));
        jTextRezonRr.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextRezonRr.setText(resourceMap.getString("jTextRezonRr.text")); // NOI18N
        jTextRezonRr.setName("jTextRezonRr"); // NOI18N

        jTextRezonRr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F5"), "F5 pressed");
        jTextRezonRr.getActionMap().put("F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decRr(false);
                ReflectRezonCalcAfterRr();
            }
        });

        jTextRezonRr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F5"), "shift F5 pressed");
        jTextRezonRr.getActionMap().put("shift F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.decRr(true);
                ReflectRezonCalcAfterRr();
            }
        });

        jTextRezonRr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F6"), "F6 pressed");
        jTextRezonRr.getActionMap().put("F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incRr(false);
                ReflectRezonCalcAfterRr();
            }
        });

        jTextRezonRr.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F6"), "shift F6 pressed");
        jTextRezonRr.getActionMap().put("shift F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.incRr(true);
                ReflectRezonCalcAfterRr();
            }
        });
        jTextRezonRr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRezonRrActionPerformed(evt);
            }
        });

        jLabelRezonRsUnit.setFont(jLabelRezonRsUnit.getFont().deriveFont(jLabelRezonRsUnit.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonRsUnit.setText(resourceMap.getString("jLabelRezonRsUnit.text")); // NOI18N
        jLabelRezonRsUnit.setName("jLabelRezonRsUnit"); // NOI18N

        jLabelRezonRrUnit.setFont(jLabelRezonRrUnit.getFont().deriveFont(jLabelRezonRrUnit.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonRrUnit.setText(resourceMap.getString("jLabelRezonRrUnit.text")); // NOI18N
        jLabelRezonRrUnit.setName("jLabelRezonRrUnit"); // NOI18N

        javax.swing.GroupLayout jPanelRezonWeLayout = new javax.swing.GroupLayout(jPanelRezonWe);
        jPanelRezonWe.setLayout(jPanelRezonWeLayout);
        jPanelRezonWeLayout.setHorizontalGroup(
            jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                        .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                                .addComponent(jLabelRezonLx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerRezonLx, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                            .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                                .addComponent(jLabelRezonCx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerRezonCx, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelRezonLxJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                            .addComponent(jLabelRezonCxJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)))
                    .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                        .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelRezonRr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelRezonRs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextRezonRs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextRezonRr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelRezonRsUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jLabelRezonRrUnit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelRezonWeLayout.setVerticalGroup(
            jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRezonLx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRezonLxJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerRezonLx, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRezonCx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerRezonCx, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRezonCxJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRezonRr)
                    .addComponent(jTextRezonRr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRezonRrUnit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanelRezonWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRezonRs)
                    .addComponent(jTextRezonRs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRezonRsUnit))
                .addGap(38, 38, 38))
        );

        jLabelRezonLx.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabelLPNW1.AccessibleContext.accessibleName")); // NOI18N

        rezPanel.add(jPanelRezonWe);
        jPanelRezonWe.setBounds(12, 136, 246, 250);
        jPanelRezonWe.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel1.AccessibleContext.accessibleName")); // NOI18N

        jPanelRezonWy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelRezonWy.border.title"), 0, 0, resourceMap.getFont("jPanelRezonWy.border.titleFont"), resourceMap.getColor("jPanelRezonWy.border.titleColor"))); // NOI18N
        jPanelRezonWy.setName("jPanelRezonWy"); // NOI18N

        jLabelRezonQr.setFont(jLabelRezonQr.getFont().deriveFont(jLabelRezonQr.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonQr.getFont().getSize()+1));
        jLabelRezonQr.setForeground(resourceMap.getColor("jLabelRezonQr.foreground")); // NOI18N
        jLabelRezonQr.setText(resourceMap.getString("jLabelRezonQr.text")); // NOI18N
        jLabelRezonQr.setName("jLabelRezonQr"); // NOI18N

        jLabelRezonQs.setFont(jLabelRezonQs.getFont().deriveFont(jLabelRezonQs.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonQs.getFont().getSize()+1));
        jLabelRezonQs.setForeground(resourceMap.getColor("jLabelRezonQs.foreground")); // NOI18N
        jLabelRezonQs.setText(resourceMap.getString("jLabelRezonQs.text")); // NOI18N
        jLabelRezonQs.setName("jLabelRezonQs"); // NOI18N

        jLabelRezonFR_.setFont(jLabelRezonFR_.getFont().deriveFont(jLabelRezonFR_.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonFR_.setForeground(resourceMap.getColor("jLabelRezonFR_.foreground")); // NOI18N
        jLabelRezonFR_.setText(resourceMap.getString("jLabelRezonFR_.text")); // NOI18N
        jLabelRezonFR_.setName("jLabelRezonFR_"); // NOI18N
        jLabelRezonFR_.setRequestFocusEnabled(false);

        jTextRezonFR.setFont(jTextRezonFR.getFont().deriveFont(jTextRezonFR.getFont().getStyle() | java.awt.Font.BOLD, jTextRezonFR.getFont().getSize()+1));
        jTextRezonFR.setForeground(resourceMap.getColor("jTextRezonFR.foreground")); // NOI18N
        jTextRezonFR.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextRezonFR.setText(resourceMap.getString("jTextRezonFR.text")); // NOI18N
        jTextRezonFR.setName("jTextRezonFR"); // NOI18N
        jTextRezonFR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRezonFRActionPerformed(evt);
            }
        });

        jLabelRezonFRUnit.setFont(jLabelRezonFRUnit.getFont().deriveFont(jLabelRezonFRUnit.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelRezonFRUnit.setForeground(resourceMap.getColor("jLabelRezonFRUnit.foreground")); // NOI18N
        jLabelRezonFRUnit.setText(resourceMap.getString("jLabelRezonFRUnit.text")); // NOI18N
        jLabelRezonFRUnit.setName("jLabelRezonFRUnit"); // NOI18N

        jSeparator5.setName("jSeparator5"); // NOI18N

        jLabelRezonRO.setFont(jLabelRezonRO.getFont().deriveFont(jLabelRezonRO.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonRO.getFont().getSize()+1));
        jLabelRezonRO.setForeground(resourceMap.getColor("jLabelRezonRO.foreground")); // NOI18N
        jLabelRezonRO.setText(resourceMap.getString("jLabelRezonRO.text")); // NOI18N
        jLabelRezonRO.setName("jLabelRezonRO"); // NOI18N

        javax.swing.GroupLayout jPanelRezonWyLayout = new javax.swing.GroupLayout(jPanelRezonWy);
        jPanelRezonWy.setLayout(jPanelRezonWyLayout);
        jPanelRezonWyLayout.setHorizontalGroup(
            jPanelRezonWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonWyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRezonWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRezonWyLayout.createSequentialGroup()
                        .addComponent(jLabelRezonFR_)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextRezonFR, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRezonFRUnit, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                    .addComponent(jLabelRezonQr, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelRezonQs, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanelRezonWyLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addGap(13, 13, 13))
            .addGroup(jPanelRezonWyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRezonRO, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelRezonWyLayout.setVerticalGroup(
            jPanelRezonWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonWyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRezonWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRezonFR_)
                    .addComponent(jTextRezonFR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRezonFRUnit))
                .addGap(9, 9, 9)
                .addComponent(jLabelRezonQr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelRezonQs)
                .addGap(9, 9, 9)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRezonRO)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        rezPanel.add(jPanelRezonWy);
        jPanelRezonWy.setBounds(264, 136, 246, 250);
        jPanelRezonWy.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel2.AccessibleContext.accessibleName")); // NOI18N

        jPanelRezonParam.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelRezonParam.border.title"), 0, 0, resourceMap.getFont("jPanelRezonParam.border.titleFont"))); // NOI18N
        jPanelRezonParam.setName("jPanelRezonParam"); // NOI18N

        jLabelRezonStepCx.setFont(jLabelRezonStepCx.getFont().deriveFont(jLabelRezonStepCx.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonStepCx.getFont().getSize()+1));
        jLabelRezonStepCx.setForeground(resourceMap.getColor("jLabelRezonStepCx.foreground")); // NOI18N
        jLabelRezonStepCx.setText(resourceMap.getString("jLabelRezonStepCx.text")); // NOI18N
        jLabelRezonStepCx.setName("jLabelRezonStepCx"); // NOI18N
        jLabelRezonStepCx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift 2"), "shift 2 pressed");
        jLabelRezonStepCx.getActionMap().put("shift 2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.chStepCx();
                PostReflectRezonCalc();
            }
        });

        jLabelRezonStepLx.setFont(jLabelRezonStepLx.getFont().deriveFont(jLabelRezonStepLx.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonStepLx.getFont().getSize()+1));
        jLabelRezonStepLx.setForeground(resourceMap.getColor("jLabelRezonStepLx.foreground")); // NOI18N
        jLabelRezonStepLx.setText(resourceMap.getString("jLabelRezonStepLx.text")); // NOI18N
        jLabelRezonStepLx.setName("jLabelRezonStepLx"); // NOI18N
        jLabelRezonStepLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift 1"), "shift 1 pressed");
        jLabelRezonStepLx.getActionMap().put("shift 1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.chStepLx();
                PostReflectRezonCalc();
            }
        });

        jSeparator6.setName("jSeparator6"); // NOI18N

        jLabelRezonVarLx.setFont(jLabelRezonVarLx.getFont().deriveFont(jLabelRezonVarLx.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonVarLx.getFont().getSize()+1));
        jLabelRezonVarLx.setForeground(resourceMap.getColor("jLabelRezonVarLx.foreground")); // NOI18N
        jLabelRezonVarLx.setText(resourceMap.getString("jLabelRezonVarLx.text")); // NOI18N
        jLabelRezonVarLx.setName("jLabelRezonVarLx"); // NOI18N
        jLabelRezonVarLx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift L"), "shift L pressed");
        jLabelRezonVarLx.getActionMap().put("shift L pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.toggleVarLx();
                PostReflectRezonCalc();
            }
        });

        jLabelRezonVarFR.setFont(jLabelRezonVarFR.getFont().deriveFont(jLabelRezonVarFR.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonVarFR.getFont().getSize()+1));
        jLabelRezonVarFR.setForeground(resourceMap.getColor("jLabelRezonVarFR.foreground")); // NOI18N
        jLabelRezonVarFR.setText(resourceMap.getString("jLabelRezonVarFR.text")); // NOI18N
        jLabelRezonVarFR.setName("jLabelRezonVarFR"); // NOI18N
        jLabelRezonVarFR.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F"), "shift F pressed");
        jLabelRezonVarFR.getActionMap().put("shift F pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.toggleVarFR();
                PostReflectRezonCalc();
            }
        });

        jLabelRezonVarCx.setFont(jLabelRezonVarCx.getFont().deriveFont(jLabelRezonVarCx.getFont().getStyle() | java.awt.Font.BOLD, jLabelRezonVarCx.getFont().getSize()+1));
        jLabelRezonVarCx.setForeground(resourceMap.getColor("jLabelRezonVarCx.foreground")); // NOI18N
        jLabelRezonVarCx.setText(resourceMap.getString("jLabelRezonVarCx.text")); // NOI18N
        jLabelRezonVarCx.setName("jLabelRezonVarCx"); // NOI18N
        jLabelRezonVarCx.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift C"), "shift C pressed");
        jLabelRezonVarCx.getActionMap().put("shift C pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                rezonCalc.toggleVarCx();
                PostReflectRezonCalc();
            }
        });

        javax.swing.GroupLayout jPanelRezonParamLayout = new javax.swing.GroupLayout(jPanelRezonParam);
        jPanelRezonParam.setLayout(jPanelRezonParamLayout);
        jPanelRezonParamLayout.setHorizontalGroup(
            jPanelRezonParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonParamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRezonParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRezonStepCx, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelRezonStepLx, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelRezonVarCx, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelRezonVarLx, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jLabelRezonVarFR, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelRezonParamLayout.setVerticalGroup(
            jPanelRezonParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRezonParamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelRezonStepLx)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRezonStepCx)
                .addGap(45, 45, 45)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRezonVarFR)
                .addGap(5, 5, 5)
                .addComponent(jLabelRezonVarLx)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRezonVarCx)
                .addGap(55, 55, 55))
        );

        rezPanel.add(jPanelRezonParam);
        jPanelRezonParam.setBounds(516, 136, 246, 250);
        jPanelRezonParam.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel3.AccessibleContext.accessibleName")); // NOI18N

        jLabelRezonHelp.setFont(jLabelRezonHelp.getFont().deriveFont(jLabelRezonHelp.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabelRezonHelp.setForeground(resourceMap.getColor("jLabelRezonHelp.foreground")); // NOI18N
        jLabelRezonHelp.setText(resourceMap.getString("jLabelRezonHelp.text")); // NOI18N
        jLabelRezonHelp.setName("jLabelRezonHelp"); // NOI18N
        rezPanel.add(jLabelRezonHelp);
        jLabelRezonHelp.setBounds(12, 398, 746, 30);

        calculatorsTPane.addTab(resourceMap.getString("rezPanel.TabConstraints.tabTitle"), rezPanel); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calculatorsTPane, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calculatorsTPane, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jMenuItemOtworz.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOtworz.setText(resourceMap.getString("jMenuItemOtworz.text")); // NOI18N
        jMenuItemOtworz.setEnabled(false);
        jMenuItemOtworz.setName("jMenuItemOtworz"); // NOI18N
        fileMenu.add(jMenuItemOtworz);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(pep.PEPApp.class).getContext().getActionMap(PEPView.class, this);
        jMenuItemZapisz.setAction(actionMap.get("saveDefaultParamFile")); // NOI18N
        jMenuItemZapisz.setText(resourceMap.getString("jMenuItemZapisz.text")); // NOI18N
        jMenuItemZapisz.setToolTipText(resourceMap.getString("jMenuItemZapisz.toolTipText")); // NOI18N
        jMenuItemZapisz.setName("jMenuItemZapisz"); // NOI18N
        fileMenu.add(jMenuItemZapisz);

        jMenuItemZapiszJako.setText(resourceMap.getString("jMenuItemZapiszJako.text")); // NOI18N
        jMenuItemZapiszJako.setEnabled(false);
        jMenuItemZapiszJako.setName("jMenuItemZapiszJako"); // NOI18N
        fileMenu.add(jMenuItemZapiszJako);

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setToolTipText(resourceMap.getString("exitMenuItem.toolTipText")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        saveDefaultParamFile();
    }//GEN-LAST:event_exitMenuItemActionPerformed

private void jTextRezonFRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRezonFRActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextRezonFR.getText());
            rezonCalc.setFR(val);
            ReflectRezonCalcAfterFR();
        }
        catch (NumberFormatException nfe) {
            ReflectRezonCalcAfterFR();
        }
}//GEN-LAST:event_jTextRezonFRActionPerformed

private void jTextRezonRrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRezonRrActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextRezonRr.getText());
            rezonCalc.setRr(val);
            ReflectRezonCalcAfterRr();
        }
        catch (NumberFormatException nfe) {
            ReflectRezonCalcAfterRr();
        }
}//GEN-LAST:event_jTextRezonRrActionPerformed

private void jTextRezonRsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRezonRsActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextRezonRs.getText());
            rezonCalc.setRs(val);
            ReflectRezonCalcAfterRs();
        }
        catch (NumberFormatException nfe) {
            ReflectRezonCalcAfterRs();
        }
}//GEN-LAST:event_jTextRezonRsActionPerformed

private void jSpinnerRezonCxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerRezonCxStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerRezonCx.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerRezonCx.getModel()).getHistory();
        
        if (c < p)
            rezonCalc.decCx(false);
        else /*if(p > c)*/
            rezonCalc.incCx(false);
        
        ReflectRezonCalcAfterC();
}//GEN-LAST:event_jSpinnerRezonCxStateChanged

private void jSpinnerRezonLxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerRezonLxStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerRezonLx.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerRezonLx.getModel()).getHistory();
        
        if (c < p)
            rezonCalc.decLx(false);
        else /*if(p > c)*/
            rezonCalc.incLx(false);
        
        ReflectRezonCalcAfterL();
}//GEN-LAST:event_jSpinnerRezonLxStateChanged

private void jSpinnerLPNEpsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerLPNEpsStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNEps.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNEps.getModel()).getHistory();
        
        if (c < p)
            LPNCalc.decEps(false);
        else /*if(p > c)*/
            LPNCalc.incEps(false);
        
        ReflectLPNCalc();
}//GEN-LAST:event_jSpinnerLPNEpsStateChanged

private void jTextLPNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextLPNTActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextLPNT.getText());
            LPNCalc.setT(val * 1e3);
            ReflectLPNCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectLPNCalc();
        }
}//GEN-LAST:event_jTextLPNTActionPerformed

private void jSpinnerLPNHStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerLPNHStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNH.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNH.getModel()).getHistory();
        
        if (c < p)
            LPNCalc.decH(false);
        else /*if(p > c)*/
            LPNCalc.incH(false);
        
        ReflectLPNCalc();
}//GEN-LAST:event_jSpinnerLPNHStateChanged

private void jSpinnerLPNWStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerLPNWStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNW.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerLPNW.getModel()).getHistory();
        
        if (c < p)
            LPNCalc.decW(false);
        else /*if(p > c)*/
            LPNCalc.incW(false);
        
        ReflectLPNCalc();
}//GEN-LAST:event_jSpinnerLPNWStateChanged

private void jTextCewkaMiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCewkaMiActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextCewkaMi.getText());
            cewkaCalc.setMi(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
}//GEN-LAST:event_jTextCewkaMiActionPerformed

private void jSpinnerCewkaFxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaFxStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaFx.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaFx.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decFx();
        else /*if(p > c)*/
            cewkaCalc.incFx();

        ReflectCewkaCalc();
}//GEN-LAST:event_jSpinnerCewkaFxStateChanged

private void jTextCewkaRsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCewkaRsActionPerformed
        try {
            double val = pepCalculator.Norm.GetValueFromString(jTextCewkaRs.getText());
            cewkaCalc.setRs(val);
            ReflectCewkaCalc();            
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
}//GEN-LAST:event_jTextCewkaRsActionPerformed

private void jSpinnerCewkaNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaNStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaN.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaN.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decN(false);
        else /*if(p > c)*/
            cewkaCalc.incN(false);
        
        ReflectCewkaCalc();
}//GEN-LAST:event_jSpinnerCewkaNStateChanged

private void jSpinnerCewkaDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaDStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaD.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaD.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decD(false);
        else /*if(p > c)*/
            cewkaCalc.incD(false);
        
        ReflectCewkaCalc();
}//GEN-LAST:event_jSpinnerCewkaDStateChanged

private void jSpinnerCewkaXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaXStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaX.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaX.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decX(false);
        else /*if(p > c)*/
            cewkaCalc.incX(false);
        
        ReflectCewkaCalc();
}//GEN-LAST:event_jSpinnerCewkaXStateChanged

    private void cewkaXEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setX(val * 1000.);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void cewkaDEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setD(val * 1000.);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void cewkaNEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setN(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void cewkaFxEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setFx(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
    }
    
    private void LPNWEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            LPNCalc.setW(val * 1e3);
            ReflectLPNCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectLPNCalc();
        }        
    }
    
    private void LPNHEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            LPNCalc.setH(val * 1e3);
            ReflectLPNCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectLPNCalc();
        }        
    }

    private void LPNEpsEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            LPNCalc.setEps(val);
            ReflectLPNCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectLPNCalc();
        }        
    }
    
    private void RezonLxEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            rezonCalc.setLx(val);
            ReflectRezonCalcAfterL();
        }
        catch (NumberFormatException nfe) {
            ReflectRezonCalcAfterL();
        }
    }
    
    private void RezonCxEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepCalculator.Norm.GetValueFromString(evt.getActionCommand());
            rezonCalc.setCx(val);
            ReflectRezonCalcAfterC();
        }
        catch (NumberFormatException nfe) {
            ReflectRezonCalcAfterC();
        }
    }

    private void initCalcs()
    {
        InitCewkaCalc();
        InitLPNCalc();
        InitRezonCalc();
    }
    
    private void reflectCalcs()
    {
        ReflectCewkaCalc();
        
        ReflectLPNCalc();
        
        ReflectRezonCalcAfterL();
    }
    
    private void InitCewkaCalc()
    {
        cewkaCalc = new pepCalculator.CewkaP();
    }
    
    private void InitLPNCalc()
    {
        LPNCalc = new pepCalculator.LPN();
    }
    
    private void InitRezonCalc()
    {
        rezonCalc = new pepCalculator.Resonance();
    }
    
    private void ReflectCewkaCalc()
    {
        cewkaCalc.AfterAny();

        // WEJSCIE
        double X = cewkaCalc.getX() / 1e3;
        double D = cewkaCalc.getD() / 1e3;
        double N = cewkaCalc.getN();

        pepCalculator.DisplayValue XNorm = pepCalculator.Norm.GetDispVal(X);
        pepCalculator.DisplayValue DNorm = pepCalculator.Norm.GetDispVal(D);
        pepCalculator.DisplayValue XDivNNorm = pepCalculator.Norm.GetDispVal(X/N);
        pepCalculator.DisplayValue RsNorm = pepCalculator.Norm.GetDispVal(cewkaCalc.getRs());
        double DXNorm = pepCalculator.Norm.Round(D/X, 3);
        
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaX.getEditor()).setText(((Double)XNorm.GetVal()).toString());
        jLabelCewkaXJdn.setText("<html><b>[" + XNorm.GetSym() + "m]</b>");
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaD.getEditor()).setText(((Double)DNorm.GetVal()).toString());
        jLabelCewkaDJdn.setText("<html><b>[" + DNorm.GetSym() + "m]</b>");
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaN.getEditor()).setText(((Double)N).toString());
        jLabelCewkaMaxSr.setText("<html><b>max. sr. drutu: " + XDivNNorm.GetVal() + " [" + XDivNNorm.GetSym() + "m]</b>");
        jLabelCewkaDDivX.setText("<html><b>D/X = " + DXNorm + "</b>");
        jTextCewkaRs.setText(((Double)RsNorm.GetVal()).toString());
        jLabelCewkaRsJdn.setText("<html><b>[" + RsNorm.GetSym() + "\u03a9]</b>");
        
        // WYJSCIE
        pepCalculator.DisplayValue LNorm = pepCalculator.Norm.GetDispVal(cewkaCalc.getLx());
        pepCalculator.DisplayValue LuNorm = pepCalculator.Norm.GetDispVal(cewkaCalc.getLmi());
        
        jLabelCewkaL.setText("<html><b>L &#32= " + LNorm.GetVal() + " [" + LNorm.GetSym() + "H]</b>");
        jLabelCewkaLMi.setText("<html><b>L\u03bc = " + LuNorm.GetVal() + " [" + LuNorm.GetSym() + "H]</b>");
        jLabelCewkaQl.setText("<html><b>Ql = " + pepCalculator.Norm.Round(cewkaCalc.getQl(), 3) + "</b>");

        // PARAMETRY
        pepCalculator.DisplayValue FxNorm = pepCalculator.Norm.GetDispVal(cewkaCalc.getFx());
        
        jLabelCewkaFxJdn.setText("<html><b>[" + FxNorm.GetSym() + "Hz]</b>");
        jTextCewkaMi.setText(((Double)cewkaCalc.getMi()).toString());
        jLabelCewkaWzor.setText(cewkaCalc.getWylKom());
        
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaFx.getEditor()).setText(((Double)FxNorm.GetVal()).toString());
    }
    
    private void ReflectLPNCalc()
    {
        LPNCalc.AfterAny();
        
        // WEJSCIE
        double W = LPNCalc.getW() / 1e3;
        int W_mls = LPNCalc.getW_mls();
        double H = LPNCalc.getH() / 1e3;
        double W_ef = LPNCalc.getW_ef() / 1e3;
        double Eps = LPNCalc.getEps();
        double Eps_ef = LPNCalc.getEps_ef();
        
        pepCalculator.DisplayValue WNorm = pepCalculator.Norm.GetDispVal(W);
        pepCalculator.DisplayValue HNorm = pepCalculator.Norm.GetDispVal(H);
        pepCalculator.DisplayValue W_efNorm = pepCalculator.Norm.GetDispVal(W_ef);
        pepCalculator.DisplayValue Eps_efNorm = pepCalculator.Norm.GetDispVal(Eps_ef);
        double WHNorm = pepCalculator.Norm.Round(W/H, 3);
        
        ((ModelIndependentSpinnerEditor)jSpinnerLPNW.getEditor()).setText(((Double)WNorm.GetVal()).toString());
        jLabelLPNWJdn.setText("<html><b>[" + WNorm.GetSym() + "m]</b>");
//        jLabelLPNW_mls.setText("<html><b>" + W_mls + "</b>");
        jLabelLPNW_mls.setText("<html>" + W_mls);
        jLabelLPNW_mlsJdn.setText("<html><b>[mls]</b>");
        ((ModelIndependentSpinnerEditor)jSpinnerLPNH.getEditor()).setText(((Double)HNorm.GetVal()).toString());
        jLabelLPNHJdn.setText("<html><b>[" + HNorm.GetSym() + "m]</b>");
        jLabelLPNWDivH.setText("<html><b>D/X = " + WHNorm + "</b>");
        jLabelLPNW_ef.setText("<html><b>W_ef = " + W_efNorm.GetVal() + " [" + W_efNorm.GetSym() + "m]</b>");
        jLabelLPNEps_ef.setText("<html><b>&#949_ef = " + Eps_efNorm.GetVal() + " [" +  Eps_efNorm.GetSym() + "]</b>");
        
        // WYJSCIE
        pepCalculator.DisplayValue Z0Norm = pepCalculator.Norm.GetDispVal(LPNCalc.getZ0());
        
        jLabelLPNZ0.setText("<html><b>Z<sub>0</sub> = " + Z0Norm.GetVal() + " [" + Z0Norm.GetSym() + "\u03a9]</b>");
        
        // PARAMETRY
        double T = LPNCalc.getT() / 1e3;

        pepCalculator.DisplayValue TNorm = pepCalculator.Norm.GetDispVal(T);
        
        jTextLPNT.setText(((Double)TNorm.GetVal()).toString());
        jLabelLPNTJdn.setText("<html><b>[" + TNorm.GetSym() + "m]</b>");
        
        ((ModelIndependentSpinnerEditor)jSpinnerLPNEps.getEditor()).setText(((Double)Eps).toString());
    }
    
    private void ReflectRezonCalcAfterL()
    {
        rezonCalc.AfterL();
        
        PostReflectRezonCalc();
    }
    
    private void ReflectRezonCalcAfterC()
    {
        rezonCalc.AfterC();
        
        PostReflectRezonCalc();
    }
    
    private void ReflectRezonCalcAfterRs()
    {
        rezonCalc.AfterRs();
        
        PostReflectRezonCalc();
    }
    
    private void ReflectRezonCalcAfterRr()
    {
        rezonCalc.AfterRr();
        
        PostReflectRezonCalc();
    }
    
    private void ReflectRezonCalcAfterFR()
    {
        rezonCalc.Afterfr();
        
        PostReflectRezonCalc();
    }
    
    private void PostReflectRezonCalc()
    {
        // INPUT
        double Rr = rezonCalc.getRr();
        double Rs = rezonCalc.getRs();
        
        pepCalculator.DisplayValue LxNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getLx());
        ((ModelIndependentSpinnerEditor)jSpinnerRezonLx.getEditor()).setText(((Double)LxNorm.GetVal()).toString());
        jLabelRezonLxJdn.setText("<html><b>[" + LxNorm.GetSym() + "H]</b>");

        pepCalculator.DisplayValue CxNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getCx());
        ((ModelIndependentSpinnerEditor)jSpinnerRezonCx.getEditor()).setText(((Double)CxNorm.GetVal()).toString());
        jLabelRezonCxJdn.setText("<html><b>[" + CxNorm.GetSym() + "F]</b>");
        
        pepCalculator.DisplayValue RrNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getRr());
        jTextRezonRr.setText(((Double)RrNorm.GetVal()).toString());
        jLabelRezonRrUnit.setText("<html><b>[" + RrNorm.GetSym() + "\u03a9]</b>");
        
        pepCalculator.DisplayValue RsNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getRs());
        jTextRezonRs.setText(((Double)RsNorm.GetVal()).toString());
        jLabelRezonRsUnit.setText("<html><b>[" + RsNorm.GetSym() + "\u03a9]</b>");
        
        // OUTPUT
        pepCalculator.DisplayValue frNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getFR());
        jTextRezonFR.setText(((Double)frNorm.GetVal()).toString());
        jLabelRezonFRUnit.setText("<html><b>[" + frNorm.GetSym() + "Hz]</b>");
        
        pepCalculator.DisplayValue QrNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getQr());
        jLabelRezonQr.setText("<html><b>Qr = " + QrNorm.GetVal() + QrNorm.GetSym());
        
        pepCalculator.DisplayValue QsNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getQs());
        jLabelRezonQs.setText("<html><b>Qs = " + QsNorm.GetVal() + QsNorm.GetSym());
        
        pepCalculator.DisplayValue RONorm = pepCalculator.Norm.GetDispVal(rezonCalc.getRO());
        jLabelRezonRO.setText("<html><b>ro = " + RONorm.GetVal() + " [" + RONorm.GetSym() + "\u03a9]</b>");
        
        // PARAMETERS
        pepCalculator.DisplayValue StepLxNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getStepLx());
        jLabelRezonStepLx.setText("<html><b>krok Lx = " + StepLxNorm.GetVal() + " [" + StepLxNorm.GetSym() + "H]</b>");

        pepCalculator.DisplayValue StepCxNorm = pepCalculator.Norm.GetDispVal(rezonCalc.getStepCx());
        jLabelRezonStepCx.setText("<html><b>krok Cx = " + StepCxNorm.GetVal() + " [" + StepCxNorm.GetSym() + "F]</b>");
        
        StringBuilder varFR = new StringBuilder("<html><b>fr - ");
        varFR.append(rezonCalc.isVarFR() ? "zmienne" : "stałe"); varFR.append(" (shift+F)</b>");
        jLabelRezonVarFR.setText(varFR.toString());
        
        StringBuilder varLx = new StringBuilder("<html><b>Lx - ");
        varLx.append(rezonCalc.isVarLx() ? "zmienne" : "stałe"); varLx.append(" (shift+L)</b>");
        jLabelRezonVarLx.setText(varLx.toString());
        
        StringBuilder varCx = new StringBuilder("<html><b>Cx - ");
        varCx.append(rezonCalc.isVarCx() ? "zmienne" : "stałe"); varCx.append(" (shift+C)</b>");
        jLabelRezonVarCx.setText(varCx.toString());
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane calculatorsTPane;
    private javax.swing.JPanel cewkapPanel;
    private javax.swing.JLabel jLabelCewkaD;
    private javax.swing.JLabel jLabelCewkaDDivX;
    private javax.swing.JLabel jLabelCewkaDJdn;
    private javax.swing.JLabel jLabelCewkaFx;
    private javax.swing.JLabel jLabelCewkaFxJdn;
    private javax.swing.JLabel jLabelCewkaL;
    private javax.swing.JLabel jLabelCewkaLMi;
    private javax.swing.JLabel jLabelCewkaMaxSr;
    private javax.swing.JLabel jLabelCewkaN;
    private javax.swing.JLabel jLabelCewkaNJdn;
    private javax.swing.JLabel jLabelCewkaQl;
    private javax.swing.JLabel jLabelCewkaRs;
    private javax.swing.JLabel jLabelCewkaRsJdn;
    private javax.swing.JLabel jLabelCewkaUw;
    private javax.swing.JLabel jLabelCewkaWzor;
    private javax.swing.JLabel jLabelCewkaX;
    private javax.swing.JLabel jLabelCewkaXJdn;
    private javax.swing.JLabel jLabelInductorGuide;
    private javax.swing.JLabel jLabelInductorHelp;
    private javax.swing.JLabel jLabelInductorKnowledgeBase;
    private javax.swing.JLabel jLabelInductorTitle;
    private javax.swing.JLabel jLabelLPNEps;
    private javax.swing.JLabel jLabelLPNEps_ef;
    private javax.swing.JLabel jLabelLPNGuide;
    private javax.swing.JLabel jLabelLPNH;
    private javax.swing.JLabel jLabelLPNHJdn;
    private javax.swing.JLabel jLabelLPNHelp;
    private javax.swing.JLabel jLabelLPNKnowledgeBase;
    private javax.swing.JLabel jLabelLPNT;
    private javax.swing.JLabel jLabelLPNTJdn;
    private javax.swing.JLabel jLabelLPNTitle;
    private javax.swing.JLabel jLabelLPNW;
    private javax.swing.JLabel jLabelLPNWDivH;
    private javax.swing.JLabel jLabelLPNWJdn;
    private javax.swing.JLabel jLabelLPNW_ef;
    private javax.swing.JLabel jLabelLPNW_mls;
    private javax.swing.JLabel jLabelLPNW_mlsJdn;
    private javax.swing.JLabel jLabelLPNZ0;
    private javax.swing.JLabel jLabelRezonCx;
    private javax.swing.JLabel jLabelRezonCxJdn;
    private javax.swing.JLabel jLabelRezonFRUnit;
    private javax.swing.JLabel jLabelRezonFR_;
    private javax.swing.JLabel jLabelRezonGuide;
    private javax.swing.JLabel jLabelRezonHelp;
    private javax.swing.JLabel jLabelRezonKnowledgeBase;
    private javax.swing.JLabel jLabelRezonLx;
    private javax.swing.JLabel jLabelRezonLxJdn;
    private javax.swing.JLabel jLabelRezonQr;
    private javax.swing.JLabel jLabelRezonQs;
    private javax.swing.JLabel jLabelRezonRO;
    private javax.swing.JLabel jLabelRezonRr;
    private javax.swing.JLabel jLabelRezonRrUnit;
    private javax.swing.JLabel jLabelRezonRs;
    private javax.swing.JLabel jLabelRezonRsUnit;
    private javax.swing.JLabel jLabelRezonStepCx;
    private javax.swing.JLabel jLabelRezonStepLx;
    private javax.swing.JLabel jLabelRezonTitle;
    private javax.swing.JLabel jLabelRezonVarCx;
    private javax.swing.JLabel jLabelRezonVarFR;
    private javax.swing.JLabel jLabelRezonVarLx;
    private javax.swing.JMenuItem jMenuItemOtworz;
    private javax.swing.JMenuItem jMenuItemZapisz;
    private javax.swing.JMenuItem jMenuItemZapiszJako;
    private javax.swing.JPanel jPanelCewkaParam;
    private javax.swing.JPanel jPanelCewkaWe;
    private javax.swing.JPanel jPanelCewkaWy;
    private javax.swing.JPanel jPanelLPNParam;
    private javax.swing.JPanel jPanelLPNWe;
    private javax.swing.JPanel jPanelLPNWy;
    private javax.swing.JPanel jPanelRezonParam;
    private javax.swing.JPanel jPanelRezonWe;
    private javax.swing.JPanel jPanelRezonWy;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSpinner jSpinnerCewkaD;
    private javax.swing.JSpinner jSpinnerCewkaFx;
    private javax.swing.JSpinner jSpinnerCewkaN;
    private javax.swing.JSpinner jSpinnerCewkaX;
    private javax.swing.JSpinner jSpinnerLPNEps;
    private javax.swing.JSpinner jSpinnerLPNH;
    private javax.swing.JSpinner jSpinnerLPNW;
    private javax.swing.JSpinner jSpinnerRezonCx;
    private javax.swing.JSpinner jSpinnerRezonLx;
    private javax.swing.JTextField jTextCewkaMi;
    private javax.swing.JTextField jTextCewkaRs;
    private javax.swing.JTextField jTextLPNT;
    private javax.swing.JTextField jTextRezonFR;
    private javax.swing.JTextField jTextRezonRr;
    private javax.swing.JTextField jTextRezonRs;
    private javax.swing.JPanel lpnPanel;
    public javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel rezPanel;
    // End of variables declaration//GEN-END:variables

    private pepCalculator.CewkaP cewkaCalc;
    private pepCalculator.LPN LPNCalc;
    private pepCalculator.Resonance rezonCalc;
    
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
