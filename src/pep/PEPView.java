/*
 * PEPView.java
 */

package pep;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.TaskMonitor;
import org.jdesktop.application.FrameView;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import pepKalkulator.Norm;

/**
 * The application's main frame.
 */
public class PEPView extends FrameView {

    public PEPView(SingleFrameApplication app) {
        super(app);

        initCalcs();
        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                //statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                //statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        //statusAnimationLabel.setIcon(idleIcon);
        //progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        //statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    //statusAnimationLabel.setIcon(idleIcon);
                    //progressBar.setVisible(false);
                    //progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    //statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    //progressBar.setVisible(true);
                    //progressBar.setIndeterminate(false);
                    //progressBar.setValue(value);
                }
            }
        });

        getFrame().setResizable(false);
        //getFrame().setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        loadDefaultParamFile();
        reflectCalcs();
    }

    @Action
    public void saveDefaultParamFile() {
        int idx = calculatorsTPane.getSelectedIndex();
        
        if (idx == 0)
        {
            cewkaCalc.SaveDefaultCfg();
        }
        else if (idx == 1)
        {
            ;
        }
    }
    
    public void loadDefaultParamFile() {
        int idx = calculatorsTPane.getSelectedIndex();
        
        if (idx == 0)
        {
            cewkaCalc.LoadDefaultCfg();
        }
        else if (idx == 1)
        {
            ;
        }
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = PEPApp.getApplication().getMainFrame();
            aboutBox = new PEPAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        PEPApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        calculatorsTPane = new javax.swing.JTabbedPane();
        cewkapPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanelCewkaWe = new javax.swing.JPanel();
        jSpinnerCewkaX = new javax.swing.JSpinner();
        jSpinnerCewkaD = new javax.swing.JSpinner();
        jSpinnerCewkaN = new javax.swing.JSpinner();
        jLabelCewkaX = new javax.swing.JLabel();
        jLabelCewkaD = new javax.swing.JLabel();
        jLabelCewkaN = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelCewkaMaxSr = new javax.swing.JLabel();
        jLabelCewkaDDivX = new javax.swing.JLabel();
        jLabelCewkaRs = new javax.swing.JLabel();
        jLabelCewkaXJdn = new javax.swing.JLabel();
        jLabelCewkaDJdn = new javax.swing.JLabel();
        jLabelCewkaNJdn = new javax.swing.JLabel();
        jTextCewkaRs = new javax.swing.JTextField();
        jLabelCewkaRsJdn = new javax.swing.JLabel();
        jPanelCewkaWy = new javax.swing.JPanel();
        jLabelCewkaL = new javax.swing.JLabel();
        jLabelCewkaLMi = new javax.swing.JLabel();
        jLabelCewkaQl = new javax.swing.JLabel();
        jPanelCewkaParam = new javax.swing.JPanel();
        jLabelCewkaUw = new javax.swing.JLabel();
        jLabelCewkaFx = new javax.swing.JLabel();
        jLabelCewkaWzor = new javax.swing.JLabel();
        jSpinnerCewkaFx = new javax.swing.JSpinner();
        jLabelCewkaFxJdn = new javax.swing.JLabel();
        jTextCewkaMi = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel12 = new javax.swing.JLabel();
        lpnPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        rezPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItemOtworz = new javax.swing.JMenuItem();
        jMenuItemZapisz = new javax.swing.JMenuItem();
        jMenuItemZapiszJako = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        calculatorsTPane.setFont(calculatorsTPane.getFont().deriveFont(calculatorsTPane.getFont().getSize()+1f));
        calculatorsTPane.setName("calculatorsTPane"); // NOI18N

        cewkapPanel.setName("cewkapPanel"); // NOI18N

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getSize()+3f));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(pep.PEPApp.class).getContext().getResourceMap(PEPView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()+1f));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getSize()+1f));
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setFont(jLabel8.getFont());
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setFont(jLabel9.getFont());
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        jPanelCewkaWe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaWe.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaWe.border.titleFont"), resourceMap.getColor("jPanelCewkaWe.border.titleColor"))); // NOI18N
        jPanelCewkaWe.setForeground(resourceMap.getColor("jPanelCewkaWe.foreground")); // NOI18N
        jPanelCewkaWe.setFont(jPanelCewkaWe.getFont().deriveFont(jPanelCewkaWe.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaWe.getFont().getSize()+1));
        jPanelCewkaWe.setName("jPanelCewkaWe"); // NOI18N

        jSpinnerCewkaX.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaX.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaX));
        jSpinnerCewkaX.setName("jSpinnerCewkaX"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaX.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaXEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F1"), "F1 pressed");
        jSpinnerCewkaX.getActionMap().put("F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decX(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F1"), "shift F1 pressed");
        jSpinnerCewkaX.getActionMap().put("shift F1 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decX(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F2"), "F2 pressed");
        jSpinnerCewkaX.getActionMap().put("F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incX(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaX.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F2"), "shift F2 pressed");
        jSpinnerCewkaX.getActionMap().put("shift F2 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incX(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaX.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaXStateChanged(evt);
            }
        });

        jSpinnerCewkaD.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaD.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaD));
        jSpinnerCewkaD.setName("jSpinnerCewkaD"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaD.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaDEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F3"), "F3 pressed");
        jSpinnerCewkaD.getActionMap().put("F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decD(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F3"), "shift F3 pressed");
        jSpinnerCewkaD.getActionMap().put("shift F3 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decD(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F4"), "F4 pressed");
        jSpinnerCewkaD.getActionMap().put("F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incD(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaD.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F4"), "shift F4 pressed");
        jSpinnerCewkaD.getActionMap().put("shift F4 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incD(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaDStateChanged(evt);
            }
        });

        jSpinnerCewkaN.setModel(new StepCountingSpinnerNumberModel());
        jSpinnerCewkaN.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaN));
        jSpinnerCewkaN.setName("jSpinnerCewkaN"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaN.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaNEditActionPerformed(evt);
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F5"), "F5 pressed");
        jSpinnerCewkaN.getActionMap().put("F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decN(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F5"), "shift F5 pressed");
        jSpinnerCewkaN.getActionMap().put("shift F5 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decN(true);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F6"), "F6 pressed");
        jSpinnerCewkaN.getActionMap().put("F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incN(false);
                ReflectCewkaCalc();
            }
        });

        jSpinnerCewkaN.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F6"), "shift F6 pressed");
        jSpinnerCewkaN.getActionMap().put("shift F6 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incN(true);
                ReflectCewkaCalc();
            }
        });
        jSpinnerCewkaN.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaNStateChanged(evt);
            }
        });

        jLabelCewkaX.setFont(jLabelCewkaX.getFont().deriveFont(jLabelCewkaX.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaX.setText(resourceMap.getString("jLabelCewkaX.text")); // NOI18N
        jLabelCewkaX.setName("jLabelCewkaX"); // NOI18N

        jLabelCewkaD.setFont(jLabelCewkaD.getFont().deriveFont(jLabelCewkaD.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaD.setText(resourceMap.getString("jLabelCewkaD.text")); // NOI18N
        jLabelCewkaD.setName("jLabelCewkaD"); // NOI18N

        jLabelCewkaN.setFont(jLabelCewkaN.getFont().deriveFont(jLabelCewkaN.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaN.setText(resourceMap.getString("jLabelCewkaN.text")); // NOI18N
        jLabelCewkaN.setName("jLabelCewkaN"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabelCewkaMaxSr.setFont(jLabelCewkaMaxSr.getFont().deriveFont(jLabelCewkaMaxSr.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaMaxSr.setText(resourceMap.getString("jLabelCewkaMaxSr.text")); // NOI18N
        jLabelCewkaMaxSr.setName("jLabelCewkaMaxSr"); // NOI18N

        jLabelCewkaDDivX.setFont(jLabelCewkaDDivX.getFont().deriveFont(jLabelCewkaDDivX.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaDDivX.setText(resourceMap.getString("jLabelCewkaDDivX.text")); // NOI18N
        jLabelCewkaDDivX.setName("jLabelCewkaDDivX"); // NOI18N

        jLabelCewkaRs.setFont(jLabelCewkaRs.getFont().deriveFont(jLabelCewkaRs.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaRs.setText(resourceMap.getString("jLabelCewkaRs.text")); // NOI18N
        jLabelCewkaRs.setName("jLabelCewkaRs"); // NOI18N

        jLabelCewkaXJdn.setFont(jLabelCewkaXJdn.getFont().deriveFont(jLabelCewkaXJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaXJdn.setText(resourceMap.getString("jLabelCewkaXJdn.text")); // NOI18N
        jLabelCewkaXJdn.setName("jLabelCewkaXJdn"); // NOI18N

        jLabelCewkaDJdn.setFont(jLabelCewkaDJdn.getFont().deriveFont(jLabelCewkaDJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaDJdn.setText(resourceMap.getString("jLabelCewkaDJdn.text")); // NOI18N
        jLabelCewkaDJdn.setName("jLabelCewkaDJdn"); // NOI18N

        jLabelCewkaNJdn.setFont(jLabelCewkaNJdn.getFont().deriveFont(jLabelCewkaNJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaNJdn.setText(resourceMap.getString("jLabelCewkaNJdn.text")); // NOI18N
        jLabelCewkaNJdn.setName("jLabelCewkaNJdn"); // NOI18N

        jTextCewkaRs.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextCewkaRs.setText(resourceMap.getString("jTextCewkaRs.text")); // NOI18N
        jTextCewkaRs.setName("jTextCewkaRs"); // NOI18N

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F9"), "F9 pressed");
        jTextCewkaRs.getActionMap().put("F9 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decRs(false);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F9"), "shift F9 pressed");
        jTextCewkaRs.getActionMap().put("shift F9 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.decRs(true);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("F10"), "F10 pressed");
        jTextCewkaRs.getActionMap().put("F10 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incRs(false);
                ReflectCewkaCalc();
            }
        });

        jTextCewkaRs.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(javax.swing.KeyStroke.getKeyStroke("shift F10"), "shift F10 pressed");
        jTextCewkaRs.getActionMap().put("shift F10 pressed", new javax.swing.AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                cewkaCalc.incRs(true);
                ReflectCewkaCalc();
            }
        });
        jTextCewkaRs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCewkaRsActionPerformed(evt);
            }
        });

        jLabelCewkaRsJdn.setFont(jLabelCewkaRsJdn.getFont().deriveFont(jLabelCewkaRsJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaRsJdn.setText(resourceMap.getString("jLabelCewkaRsJdn.text")); // NOI18N
        jLabelCewkaRsJdn.setName("jLabelCewkaRsJdn"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaWeLayout = new javax.swing.GroupLayout(jPanelCewkaWe);
        jPanelCewkaWe.setLayout(jPanelCewkaWeLayout);
        jPanelCewkaWeLayout.setHorizontalGroup(
            jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCewkaDDivX, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(jLabelCewkaMaxSr, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addComponent(jLabelCewkaRs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextCewkaRs, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCewkaRsJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                    .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                        .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCewkaX, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabelCewkaD)
                            .addComponent(jLabelCewkaN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSpinnerCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerCewkaN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCewkaNJdn)
                            .addComponent(jLabelCewkaDJdn)
                            .addComponent(jLabelCewkaXJdn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCewkaWeLayout.setVerticalGroup(
            jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerCewkaX, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCewkaXJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerCewkaD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCewkaDJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinnerCewkaN, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCewkaNJdn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabelCewkaMaxSr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCewkaDDivX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCewkaWeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCewkaRs)
                    .addComponent(jTextCewkaRs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCewkaRsJdn))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanelCewkaWy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaWy.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaWy.border.titleFont"), resourceMap.getColor("jPanelCewkaWy.border.titleColor"))); // NOI18N
        jPanelCewkaWy.setFont(jPanelCewkaWy.getFont().deriveFont(jPanelCewkaWy.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaWy.getFont().getSize()+1));
        jPanelCewkaWy.setName("jPanelCewkaWy"); // NOI18N

        jLabelCewkaL.setFont(jLabelCewkaL.getFont().deriveFont(jLabelCewkaL.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaL.getFont().getSize()+1));
        jLabelCewkaL.setForeground(resourceMap.getColor("jLabelCewkaL.foreground")); // NOI18N
        jLabelCewkaL.setText(resourceMap.getString("jLabelCewkaL.text")); // NOI18N
        jLabelCewkaL.setName("jLabelCewkaL"); // NOI18N

        jLabelCewkaLMi.setFont(jLabelCewkaLMi.getFont().deriveFont(jLabelCewkaLMi.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaLMi.getFont().getSize()+1));
        jLabelCewkaLMi.setForeground(resourceMap.getColor("jLabelCewkaLMi.foreground")); // NOI18N
        jLabelCewkaLMi.setText(resourceMap.getString("jLabelCewkaLMi.text")); // NOI18N
        jLabelCewkaLMi.setName("jLabelCewkaLMi"); // NOI18N

        jLabelCewkaQl.setFont(jLabelCewkaQl.getFont().deriveFont(jLabelCewkaQl.getFont().getStyle() | java.awt.Font.BOLD, jLabelCewkaQl.getFont().getSize()+1));
        jLabelCewkaQl.setForeground(resourceMap.getColor("jLabelCewkaQl.foreground")); // NOI18N
        jLabelCewkaQl.setText(resourceMap.getString("jLabelCewkaQl.text")); // NOI18N
        jLabelCewkaQl.setName("jLabelCewkaQl"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaWyLayout = new javax.swing.GroupLayout(jPanelCewkaWy);
        jPanelCewkaWy.setLayout(jPanelCewkaWyLayout);
        jPanelCewkaWyLayout.setHorizontalGroup(
            jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCewkaL, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jLabelCewkaLMi, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jLabelCewkaQl, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelCewkaWyLayout.setVerticalGroup(
            jPanelCewkaWyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaWyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCewkaL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCewkaLMi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCewkaQl)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        jPanelCewkaParam.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), resourceMap.getString("jPanelCewkaParam.border.title"), 0, 0, resourceMap.getFont("jPanelCewkaParam.border.titleFont"))); // NOI18N
        jPanelCewkaParam.setFont(jPanelCewkaParam.getFont().deriveFont(jPanelCewkaParam.getFont().getStyle() | java.awt.Font.BOLD, jPanelCewkaParam.getFont().getSize()+1));
        jPanelCewkaParam.setName("jPanelCewkaParam"); // NOI18N

        jLabelCewkaUw.setFont(jLabelCewkaUw.getFont().deriveFont(jLabelCewkaUw.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaUw.setText(resourceMap.getString("jLabelCewkaUw.text")); // NOI18N
        jLabelCewkaUw.setName("jLabelCewkaUw"); // NOI18N

        jLabelCewkaFx.setFont(jLabelCewkaFx.getFont().deriveFont(jLabelCewkaFx.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaFx.setText(resourceMap.getString("jLabelCewkaFx.text")); // NOI18N
        jLabelCewkaFx.setName("jLabelCewkaFx"); // NOI18N

        jLabelCewkaWzor.setFont(jLabelCewkaWzor.getFont().deriveFont(jLabelCewkaWzor.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaWzor.setText(resourceMap.getString("jLabelCewkaWzor.text")); // NOI18N
        jLabelCewkaWzor.setName("jLabelCewkaWzor"); // NOI18N

        jSpinnerCewkaFx.setModel(new pep.StepCountingSpinnerNumberModel());
        jSpinnerCewkaFx.setEditor(new ModelIndependentSpinnerEditor(jSpinnerCewkaFx));
        jSpinnerCewkaFx.setName("jSpinnerCewkaFx"); // NOI18N
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaFx.getEditor()).getTextField().
        addActionListener(new ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cewkaFxEditActionPerformed(evt);
            }
        });
        jSpinnerCewkaFx.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCewkaFxStateChanged(evt);
            }
        });

        jLabelCewkaFxJdn.setFont(jLabelCewkaFxJdn.getFont().deriveFont(jLabelCewkaFxJdn.getFont().getStyle() | java.awt.Font.BOLD));
        jLabelCewkaFxJdn.setText(resourceMap.getString("jLabelCewkaFxJdn.text")); // NOI18N
        jLabelCewkaFxJdn.setName("jLabelCewkaFxJdn"); // NOI18N

        jTextCewkaMi.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextCewkaMi.setText(resourceMap.getString("jTextCewkaMi.text")); // NOI18N
        jTextCewkaMi.setName("jTextCewkaMi"); // NOI18N
        jTextCewkaMi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextCewkaMiActionPerformed(evt);
            }
        });

        jSeparator2.setName("jSeparator2"); // NOI18N

        javax.swing.GroupLayout jPanelCewkaParamLayout = new javax.swing.GroupLayout(jPanelCewkaParam);
        jPanelCewkaParam.setLayout(jPanelCewkaParamLayout);
        jPanelCewkaParamLayout.setHorizontalGroup(
            jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCewkaWzor, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCewkaParamLayout.createSequentialGroup()
                        .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelCewkaUw)
                            .addComponent(jLabelCewkaFx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextCewkaMi, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerCewkaFx, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelCewkaFxJdn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelCewkaParamLayout.setVerticalGroup(
            jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCewkaUw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextCewkaMi, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanelCewkaParamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelCewkaFxJdn)
                            .addComponent(jLabelCewkaFx)))
                    .addGroup(jPanelCewkaParamLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerCewkaFx, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabelCewkaWzor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );

        jLabel12.setFont(jLabel12.getFont());
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        javax.swing.GroupLayout cewkapPanelLayout = new javax.swing.GroupLayout(cewkapPanel);
        cewkapPanel.setLayout(cewkapPanelLayout);
        cewkapPanelLayout.setHorizontalGroup(
            cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cewkapPanelLayout.createSequentialGroup()
                .addGroup(cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cewkapPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cewkapPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(cewkapPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE))
                    .addGroup(cewkapPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                            .addGroup(cewkapPanelLayout.createSequentialGroup()
                                .addComponent(jPanelCewkaWe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelCewkaWy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanelCewkaParam, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE))))
                .addContainerGap())
        );
        cewkapPanelLayout.setVerticalGroup(
            cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cewkapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(cewkapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCewkaWe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCewkaWy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCewkaParam, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        jPanelCewkaWe.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanelCewkaWe.AccessibleContext.accessibleName")); // NOI18N

        calculatorsTPane.addTab(resourceMap.getString("cewkapPanel.TabConstraints.tabTitle"), cewkapPanel); // NOI18N

        lpnPanel.setName("lpnPanel"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel10.setForeground(resourceMap.getColor("jLabel10.foreground")); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N

        javax.swing.GroupLayout lpnPanelLayout = new javax.swing.GroupLayout(lpnPanel);
        lpnPanel.setLayout(lpnPanelLayout);
        lpnPanelLayout.setHorizontalGroup(
            lpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpnPanelLayout.createSequentialGroup()
                .addGroup(lpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lpnPanelLayout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 212, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(lpnPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)))
                .addContainerGap())
        );
        lpnPanelLayout.setVerticalGroup(
            lpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(367, Short.MAX_VALUE))
        );

        calculatorsTPane.addTab(resourceMap.getString("lpnPanel.TabConstraints.tabTitle"), lpnPanel); // NOI18N

        rezPanel.setName("rezPanel"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel11.setForeground(resourceMap.getColor("jLabel11.foreground")); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        javax.swing.GroupLayout rezPanelLayout = new javax.swing.GroupLayout(rezPanel);
        rezPanel.setLayout(rezPanelLayout);
        rezPanelLayout.setHorizontalGroup(
            rezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rezPanelLayout.createSequentialGroup()
                .addGroup(rezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rezPanelLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                        .addGap(102, 102, 102)
                        .addComponent(jLabel6))
                    .addGroup(rezPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rezPanelLayout.setVerticalGroup(
            rezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rezPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rezPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(367, Short.MAX_VALUE))
        );

        calculatorsTPane.addTab(resourceMap.getString("rezPanel.TabConstraints.tabTitle"), rezPanel); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calculatorsTPane, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(calculatorsTPane, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jMenuItemOtworz.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemOtworz.setText(resourceMap.getString("jMenuItemOtworz.text")); // NOI18N
        jMenuItemOtworz.setEnabled(false);
        jMenuItemOtworz.setName("jMenuItemOtworz"); // NOI18N
        fileMenu.add(jMenuItemOtworz);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(pep.PEPApp.class).getContext().getActionMap(PEPView.class, this);
        jMenuItemZapisz.setAction(actionMap.get("saveDefaultParamFile")); // NOI18N
        jMenuItemZapisz.setText(resourceMap.getString("jMenuItemZapisz.text")); // NOI18N
        jMenuItemZapisz.setToolTipText(resourceMap.getString("jMenuItemZapisz.toolTipText")); // NOI18N
        jMenuItemZapisz.setName("jMenuItemZapisz"); // NOI18N
        fileMenu.add(jMenuItemZapisz);

        jMenuItemZapiszJako.setText(resourceMap.getString("jMenuItemZapiszJako.text")); // NOI18N
        jMenuItemZapiszJako.setEnabled(false);
        jMenuItemZapiszJako.setName("jMenuItemZapiszJako"); // NOI18N
        fileMenu.add(jMenuItemZapiszJako);

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setToolTipText(resourceMap.getString("exitMenuItem.toolTipText")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        saveDefaultParamFile();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jSpinnerCewkaXStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaXStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaX.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaX.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decX(false);
        else /*if(p > c)*/
            cewkaCalc.incX(false);
        
        ReflectCewkaCalc();
    }//GEN-LAST:event_jSpinnerCewkaXStateChanged

    private void jSpinnerCewkaDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaDStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaD.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaD.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decD(false);
        else /*if(p > c)*/
            cewkaCalc.incD(false);
        
        ReflectCewkaCalc();
    }//GEN-LAST:event_jSpinnerCewkaDStateChanged

    private void jSpinnerCewkaNStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaNStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaN.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaN.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decN(false);
        else /*if(p > c)*/
            cewkaCalc.incN(false);
        
        ReflectCewkaCalc();
    }//GEN-LAST:event_jSpinnerCewkaNStateChanged

    private void jSpinnerCewkaFxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerCewkaFxStateChanged
        Integer c = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaFx.getModel()).getValue();
        Integer p = (Integer)((StepCountingSpinnerNumberModel)jSpinnerCewkaFx.getModel()).getHistory();
        
        if (c < p)
            cewkaCalc.decFx();
        else /*if(p > c)*/
            cewkaCalc.incFx();

        ReflectCewkaCalc();
    }//GEN-LAST:event_jSpinnerCewkaFxStateChanged

    private void cewkaXEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepKalkulator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setX(val * 1000.);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void cewkaDEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepKalkulator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setD(val * 1000.);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void cewkaNEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepKalkulator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setN(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }        
    }

    private void jTextCewkaMiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCewkaMiActionPerformed
        try {
            double val = pepKalkulator.Norm.GetValueFromString(jTextCewkaMi.getText());
            cewkaCalc.setMi(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
    }//GEN-LAST:event_jTextCewkaMiActionPerformed

    private void cewkaFxEditActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            double val = pepKalkulator.Norm.GetValueFromString(evt.getActionCommand());
            cewkaCalc.setFx(val);
            ReflectCewkaCalc();
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
    }
    
    private void jTextCewkaRsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextCewkaRsActionPerformed
        try {
            double val = pepKalkulator.Norm.GetValueFromString(jTextCewkaRs.getText());
            cewkaCalc.setRs(val);
            ReflectCewkaCalc();            
        }
        catch (NumberFormatException nfe) {
            ReflectCewkaCalc();
        }
    }//GEN-LAST:event_jTextCewkaRsActionPerformed

    private void initCalcs()
    {
        InitCewkaKalk();
        InitLPNKalk();
        InitRezonKalk();
    }
    
    private void reflectCalcs()
    {
        ReflectCewkaCalc();
        ReflectLPNKalk();
        ReflectRezonKalk();
    }
    
    private void InitCewkaKalk()
    {
        cewkaCalc = new pepKalkulator.CewkaP();
//        cewkaKalk.AfterAny();
//        ReflectCewkaKalk();
    }
    
    private void InitLPNKalk()
    {
    }
    
    private void InitRezonKalk()
    {
    }
    
    private void ReflectCewkaCalc()
    {
        cewkaCalc.AfterAny();

        // WEJSCIE
        double X = cewkaCalc.getX() / 1000.;
        double D = cewkaCalc.getD() / 1000.;
        double N = cewkaCalc.getN();

        pepKalkulator.DisplayValue XNorm = pepKalkulator.Norm.GetDispVal(X);
        pepKalkulator.DisplayValue DNorm = pepKalkulator.Norm.GetDispVal(D);
        pepKalkulator.DisplayValue XDivNNorm = pepKalkulator.Norm.GetDispVal(X/N);
        pepKalkulator.DisplayValue RsNorm = pepKalkulator.Norm.GetDispVal(cewkaCalc.getRs());
        
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaX.getEditor()).setText(((Double)XNorm.GetVal()).toString());
        jLabelCewkaXJdn.setText("<html><b>[" + XNorm.GetSym() + "m]</b>");
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaD.getEditor()).setText(((Double)DNorm.GetVal()).toString());
        jLabelCewkaDJdn.setText("<html><b>[" + DNorm.GetSym() + "m]</b>");
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaN.getEditor()).setText(((Double)N).toString());
        jLabelCewkaMaxSr.setText("<html><b>max. sr. drutu: " + XDivNNorm.GetVal() + " [" + XDivNNorm.GetSym() + "m]</b>");
        jLabelCewkaDDivX.setText("<html><b>D/X = " + D/X + "</b>");
        jTextCewkaRs.setText(((Double)RsNorm.GetVal()).toString());
        jLabelCewkaRsJdn.setText("<html><b>[" + RsNorm.GetSym() + "\u03a9]</b>");
        
        // WYJSCIE
        pepKalkulator.DisplayValue LNorm = pepKalkulator.Norm.GetDispVal(cewkaCalc.getLx());
        pepKalkulator.DisplayValue LuNorm = pepKalkulator.Norm.GetDispVal(cewkaCalc.getLmi());
        
        jLabelCewkaL.setText("<html><b>L &#32= " + LNorm.GetVal() + " [" + LNorm.GetSym() + "H]</b>");
        jLabelCewkaLMi.setText("<html><b>L\u03bc = " + LuNorm.GetVal() + " [" + LuNorm.GetSym() + "H]</b>");
        jLabelCewkaQl.setText("<html><b>Ql = " + pepKalkulator.Norm.Round(cewkaCalc.getQl(), 3) + "</b>");

        // PARAMETRY
        pepKalkulator.DisplayValue FxNorm = pepKalkulator.Norm.GetDispVal(cewkaCalc.getFx());
        
        jLabelCewkaFxJdn.setText("<html><b>[" + FxNorm.GetSym() + "Hz]</b>");
        jTextCewkaMi.setText(((Double)cewkaCalc.getMi()).toString());
        jLabelCewkaWzor.setText(cewkaCalc.getWylKom());
        
        ((ModelIndependentSpinnerEditor)jSpinnerCewkaFx.getEditor()).setText(((Double)FxNorm.GetVal()).toString());
    }
    
    private void ReflectLPNKalk()
    {
    }
    
    private void ReflectRezonKalk()
    {
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane calculatorsTPane;
    private javax.swing.JPanel cewkapPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCewkaD;
    private javax.swing.JLabel jLabelCewkaDDivX;
    private javax.swing.JLabel jLabelCewkaDJdn;
    private javax.swing.JLabel jLabelCewkaFx;
    private javax.swing.JLabel jLabelCewkaFxJdn;
    private javax.swing.JLabel jLabelCewkaL;
    private javax.swing.JLabel jLabelCewkaLMi;
    private javax.swing.JLabel jLabelCewkaMaxSr;
    private javax.swing.JLabel jLabelCewkaN;
    private javax.swing.JLabel jLabelCewkaNJdn;
    private javax.swing.JLabel jLabelCewkaQl;
    private javax.swing.JLabel jLabelCewkaRs;
    private javax.swing.JLabel jLabelCewkaRsJdn;
    private javax.swing.JLabel jLabelCewkaUw;
    private javax.swing.JLabel jLabelCewkaWzor;
    private javax.swing.JLabel jLabelCewkaX;
    private javax.swing.JLabel jLabelCewkaXJdn;
    private javax.swing.JMenuItem jMenuItemOtworz;
    private javax.swing.JMenuItem jMenuItemZapisz;
    private javax.swing.JMenuItem jMenuItemZapiszJako;
    private javax.swing.JPanel jPanelCewkaParam;
    private javax.swing.JPanel jPanelCewkaWe;
    private javax.swing.JPanel jPanelCewkaWy;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerCewkaD;
    private javax.swing.JSpinner jSpinnerCewkaFx;
    private javax.swing.JSpinner jSpinnerCewkaN;
    private javax.swing.JSpinner jSpinnerCewkaX;
    private javax.swing.JTextField jTextCewkaMi;
    private javax.swing.JTextField jTextCewkaRs;
    private javax.swing.JPanel lpnPanel;
    public javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel rezPanel;
    // End of variables declaration//GEN-END:variables

    private pepKalkulator.CewkaP cewkaCalc;
    private pepKalkulator.LPN LPNKalk;
    
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
